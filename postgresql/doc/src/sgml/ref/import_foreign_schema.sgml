<!--
doc/src/sgml/ref/import_foreign_schema.sgml
PostgreSQL documentation
-->

<refentry id="SQL-IMPORTFOREIGNSCHEMA">
 <indexterm zone="sql-importforeignschema">
  <primary>IMPORT FOREIGN SCHEMA</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>IMPORT FOREIGN SCHEMA</refentrytitle>
  <manvolnum>7</manvolnum>
  <!-- 
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
  -->
  <refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>IMPORT FOREIGN SCHEMA</refname>
  <!-- 
  <refpurpose>import table definitions from a foreign server</refpurpose>
  -->
  <refpurpose>从外部服务器导入表定义</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
IMPORT FOREIGN SCHEMA <replaceable class="PARAMETER">remote_schema</replaceable>
    [ { LIMIT TO | EXCEPT } ( <replaceable class="PARAMETER">table_name</replaceable> [, ...] ) ]
    FROM SERVER <replaceable class="PARAMETER">server_name</replaceable>
    INTO <replaceable class="PARAMETER">local_schema</replaceable>
    [ OPTIONS ( <replaceable class="PARAMETER">option</replaceable> '<replaceable class="PARAMETER">value</replaceable>' [, ... ] ) ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="SQL-IMPORTFOREIGNSCHEMA-description">
  <!-- 
  <title>Description</title>
  -->
  <title>描述</title>

  <!-- 
  <para>
   <command>IMPORT FOREIGN SCHEMA</command> creates foreign tables that
   represent tables existing on a foreign server.  The new foreign tables
   will be owned by the user issuing the command and are created with
   the correct column definitions and options to match the remote tables.
  </para>
  -->
  <para>
   <command>IMPORT FOREIGN SCHEMA</command>创建表示存在于外部服务器上的表的外部表。
   新的外表将由发出命令的用户拥有，并使用正确的列定义和选项创建，以匹配远程表。
  </para>

  <!-- 
  <para>
   By default, all tables and views existing in a particular schema on the
   foreign server are imported.  Optionally, the list of tables can be limited
   to a specified subset, or specific tables can be excluded.  The new foreign
   tables are all created in the target schema, which must already exist.
  </para>
  -->
  <para>
   默认情况下，导入外部服务器上特定模式中存在的所有表和视图。
   可选地，表的列表可以限于指定的子集，或者可以排除特定的表。
   新的外表都是在目标模式中创建的，目标模式必须已经存在。
  </para>

  <!-- 
  <para>
   To use <command>IMPORT FOREIGN SCHEMA</command>, the user must have
   <literal>USAGE</literal> privilege on the foreign server, as well as
   <literal>CREATE</literal> privilege on the target schema.
  </para>
  -->
  <para>
   要使用<command>IMPORT FOREIGN SCHEMA</command>，
   用户必须在外部服务器上具有<literal>USAGE</literal>特权，
   以及对目标模式具有<literal>CREATE</literal>特权。
  </para>
 </refsect1>

 <refsect1>
  <!-- 
  <title>Parameters</title>
  -->
  <title>参数</title>

  <variablelist>

   <varlistentry>
    <term><replaceable class="PARAMETER">remote_schema</replaceable></term>
    <listitem>
     <!-- 
     <para>
      The remote schema to import from. The specific meaning of a remote schema
      depends on the foreign data wrapper in use.
     </para>
     -->
     <para>
      要从中导入的远程模式。远程模式的具体含义取决于正在使用的外部数据包装程序。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>LIMIT TO ( <replaceable class="PARAMETER">table_name</replaceable> [, ...] )</literal></term>
    <listitem>
     <!-- 
     <para>
      Import only foreign tables matching one of the given table names.
      Other tables existing in the foreign schema will be ignored.
     </para>
     -->
     <para>
      仅导入与给定表名称匹配的外表。外部模式中存在的其他表将被忽略。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>EXCEPT ( <replaceable class="PARAMETER">table_name</replaceable> [, ...] )</literal></term>
    <listitem>
     <!-- 
     <para>
      Exclude specified foreign tables from the import.  All tables
      existing in the foreign schema will be imported except the
      ones listed here.
     </para>
     -->
     <para>
      从导入中排除指定的外部表。除了这里列出的以外，外部模式中存在的所有表都将被导入。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">server_name</replaceable></term>
    <listitem>
     <!-- 
     <para>
      The foreign server to import from.
     </para>
     -->
     <para>
      要从中导入的外部服务器。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">local_schema</replaceable></term>
    <listitem>
     <!-- 
     <para>
      The schema in which the imported foreign tables will be created.
     </para>
     -->
     <para>
      即将创建导入的外表所在的模式。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( <replaceable class="PARAMETER">option</replaceable> '<replaceable class="PARAMETER">value</replaceable>' [, ...] )</literal></term>
    <listitem>
     <!-- 
     <para>
      Options to be used during the import.
      The allowed option names and values are specific to each foreign
      data wrapper.
     </para>
     -->
     <para>
      导入期间要使用的选项。允许的选项名称和值特定于每个外部数据包装器。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="SQL-IMPORTFOREIGNSCHEMA-examples">
  <!-- 
  <title>Examples</title>
  -->
  <title>示例</title>

  <para>
   <!-- 
   Import table definitions from a remote schema <structname>foreign_films</>
   on server <structname>film_server</>, creating the foreign tables in
   local schema <structname>films</>:
   -->
   从服务器<structname>film_server</>上的远程模式<structname>foreign_films</>
   导入表定义，在本地模式<structname>films</>中创建外表：

<programlisting>
IMPORT FOREIGN SCHEMA foreign_films
    FROM SERVER film_server INTO films;
</programlisting>
   </para>

  <para>
   <!-- 
   As above, but import only the two tables <structname>actors</> and
   <literal>directors</> (if they exist):
   -->
   如上所述，但只导入两个表<structname>actors</>和<literal>directors</>（如果存在）：

<programlisting>
IMPORT FOREIGN SCHEMA foreign_films LIMIT TO (actors, directors)
    FROM SERVER film_server INTO films;
</programlisting>
   </para>

 </refsect1>

 <refsect1 id="SQL-IMPORTFOREIGNSCHEMA-compatibility">
  <!-- 
  <title>Compatibility</title>
  -->
  <title>兼容性</title>

  <!-- 
  <para>
   The <command>IMPORT FOREIGN SCHEMA</command> command conforms to the
   <acronym>SQL</acronym> standard, except that the <literal>OPTIONS</>
   clause is a <productname>PostgreSQL</> extension.
  </para>
  -->
  <para>
   <command>IMPORT FOREIGN SCHEMA</command>命令符合<acronym>SQL</acronym>标准，
   但<literal>OPTIONS</>子句是<productname>PostgreSQL</>扩展。
  </para>

 </refsect1>

 <refsect1>
  <!-- 
  <title>See Also</title>
  -->
  <title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createforeigntable"></member>
   <member><xref linkend="sql-createserver"></member>
  </simplelist>
 </refsect1>
</refentry>

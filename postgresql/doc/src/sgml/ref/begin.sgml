<!--
doc/src/sgml/ref/begin.sgml
PostgreSQL documentation
-->

<refentry id="SQL-BEGIN">
 <refmeta>
  <refentrytitle>BEGIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>BEGIN</refname>
  <!--
<refpurpose>start a transaction block</refpurpose>
-->
<refpurpose>
开始一个事务块
</refpurpose>
 </refnamediv>

 <indexterm zone="sql-begin">
  <primary>BEGIN</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
BEGIN [ WORK | TRANSACTION ] [ <replaceable class="parameter">transaction_mode</replaceable> [, ...] ]

<phrase><replaceable class="parameter">transaction_mode</replaceable>可以是以下选项之一：</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>BEGIN</command> initiates a transaction block, that is,
   all statements after a <command>BEGIN</command> command will be
   executed in a single transaction until an explicit <xref
   linkend="sql-commit"> or <xref
   linkend="sql-rollback"> is given.
   By default (without <command>BEGIN</command>),
   <productname>PostgreSQL</productname> executes
   transactions in <quote>autocommit</quote> mode, that is, each
   statement is executed in its own transaction and a commit is
   implicitly performed at the end of the statement (if execution was
   successful, otherwise a rollback is done).
  </para>
-->
<para>
<command>BEGIN</command>初始化一个事务块，也就是说所有<command>BEGIN</command>命令后的用户语句都将在一个事务里面执行直到给出一个明确的<xref linkend="sql-commit">或<xref linkend="sql-rollback">。
缺省情况下(没有<command>BEGIN</command>)，<productname>PostgreSQL</productname>以<quote>autocommit</quote>模式执行事务，也就是说，每个语句在其自身的事务中执行，并且在语句结束的时候执行了一次隐含的提交。
（如果执行成功则隐含地执行一个提交，否则执行回滚。）
</para>

  <!--
<para>
   Statements are executed more quickly in a transaction block, because
   transaction start/commit requires significant CPU and disk
   activity. Execution of multiple statements inside a transaction is
   also useful to ensure consistency when making several related changes:
   other sessions will be unable to see the intermediate states
   wherein not all the related updates have been done.
  </para>
-->
<para>
在事务块里语句执行的明显快得多，因为事务开始/提交需要大量的CPU和磁盘活动。 
在一个事务内部执行多条语句对于修改若干个相关的表的时候也是很有用的： 在所有相关的更新完成之前，其它会话看不到中间的状态。 
</para>

  <!--
<para>
   If the isolation level, read/write mode, or deferrable mode is specified, the new
   transaction has those characteristics, as if
   <xref linkend="sql-set-transaction">
   was executed.
  </para>
-->
<para>
如果指定了隔离级别、读/写模式或者是延迟模式，那么新事务将具有那些特征。 就像执行了<xref linkend="sql-set-transaction">一样。 
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><literal>WORK</literal></term>
    <term><literal>TRANSACTION</literal></term>
    <listitem>
     <!--
<para>
      Optional key words. They have no effect.
     </para>
-->
<para>
可选关键字，没什么作用。
</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <!--
<para>
   Refer to <xref linkend="sql-set-transaction"> for information on the meaning
   of the other parameters to this statement.
  </para>
-->
<para>
参考<xref linkend="sql-set-transaction">获取这个语句的其它参数的含义。 
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   <xref linkend="sql-start-transaction"> has the same functionality
   as <command>BEGIN</>.
  </para>
-->
<para>
<xref linkend="sql-start-transaction">有着和<command>BEGIN</>一样的功能。 
</para>

  <!--
<para>
   Use <xref linkend="SQL-COMMIT"> or
   <xref linkend="SQL-ROLLBACK">
   to terminate a transaction block.
  </para>
-->
<para>
使用<xref linkend="SQL-COMMIT">或<xref linkend="SQL-ROLLBACK">结束一个事务块。
</para>

  <!--
<para>
   Issuing <command>BEGIN</> when already inside a transaction block will
   provoke a warning message.  The state of the transaction is not affected.
   To nest transactions within a transaction block, use savepoints
   (see <xref linkend="sql-savepoint">).
  </para>
-->
<para>
在一个现有事务块内部发出一个<command>BEGIN</>将产生一个警告信息。
事务的状态将不会被影响。
要想在一个事务块里嵌套事务，请使用保存点功能(参见<xref linkend="sql-savepoint">)。
</para>

  <!--
<para>
   For reasons of backwards compatibility, the commas between successive
   <replaceable class="parameter">transaction_modes</replaceable> can be
   omitted.
  </para>
-->
<para>
 出于向下兼容考虑，在随后的<replaceable class="parameter">transaction_modes</replaceable>之间的逗号可以忽略 。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To begin a transaction block:

<programlisting>
BEGIN;
</programlisting></para>
-->
<para>
开始一个事务块： 
<programlisting>
BEGIN;
</programlisting>
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <command>BEGIN</command> is a <productname>PostgreSQL</productname>
   language extension.  It is equivalent to the SQL-standard command
   <xref linkend="sql-start-transaction">, whose reference page
   contains additional compatibility information.
  </para>
-->
<para>
<command>BEGIN</command>是<productname>PostgreSQL</productname>语言的扩展。
它等价于SQL标准中的<xref linkend="sql-start-transaction">命令，在其命令的资料中包含更多有关兼容性的信息。
</para>

  <!--
<para>
   The <literal>DEFERRABLE</literal>
   <replaceable class="parameter">transaction_mode</replaceable>
   is a <productname>PostgreSQL</productname> language extension.
  </para>
-->
<para>
<literal>DEFERRABLE</literal><replaceable class="parameter">transaction_mode</replaceable>选项是<productname>PostgreSQL</productname>的扩展。
</para>

  <!--
<para>
   Incidentally, the <literal>BEGIN</literal> key word is used for a
   different purpose in embedded SQL. You are advised to be careful
   about the transaction semantics when porting database applications.
  </para>
-->
<para>
顺便说一句，<literal>BEGIN</literal>关键字在嵌入SQL里用于不同目的。建议你在移植数据库应用时仔细检查事务的语意。 
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-commit"></member>
   <member><xref linkend="sql-rollback"></member>
   <member><xref linkend="sql-start-transaction"></member>
   <member><xref linkend="sql-savepoint"></member>
  </simplelist>
 </refsect1>
</refentry>

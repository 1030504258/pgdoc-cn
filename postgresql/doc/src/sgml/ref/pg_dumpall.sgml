<!--
doc/src/sgml/ref/pg_dumpall.sgml
PostgreSQL documentation
-->

<refentry id="APP-PG-DUMPALL">
 <refmeta>
  <refentrytitle><application>pg_dumpall</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <!-- 
  <refmiscinfo>Application</refmiscinfo> 
  -->
  <refmiscinfo>应用</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_dumpall</refname>
  <!-- 
  <refpurpose>extract a <productname>PostgreSQL</productname> database cluster into a script file</refpurpose>
  -->
  <refpurpose>将一个<productname>PostgreSQL</productname>数据库集群转储到一个脚本文件中</refpurpose>
 </refnamediv>

 <indexterm zone="app-pg-dumpall">
  <primary>pg_dumpall</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_dumpall</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="app-pg-dumpall-description">
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <application>pg_dumpall</application> is a utility for writing out
   (<quote>dumping</quote>) all <productname>PostgreSQL</> databases
   of a cluster into one script file.  The script file contains
   <acronym>SQL</acronym> commands that can be used as input to <xref
   linkend="app-psql"> to restore the databases.  It does this by
   calling <xref linkend="app-pgdump"> for each database in a cluster.
   <application>pg_dumpall</application> also dumps global objects
   that are common to all databases.
   (<application>pg_dump</application> does not save these objects.)
   This currently includes information about database users and
   groups, tablespaces, and properties such as access permissions
   that apply to databases as a whole.
  </para>
-->
<para>
<application>pg_dumpall</application>可以转储一个数据库集群里的所有数据库到一个脚本文件。
该脚本文件包含可以用于作为<xref linkend="app-psql">输入的<acronym>SQL</acronym>命令，
从而恢复数据库。它通过对数据库集群里的每个数据库调用<xref linkend="app-pgdump">
实现这个功能。<application>pg_dumpall</application>还转储出所有数据库公用的全局对象。
而<application>pg_dump</application>并不保存这些对象。
这些信息包括数据库用户和组、表空间，以及性能如适用于整个数据库的访问权限。
</para>

  <!--
<para>
   Since <application>pg_dumpall</application> reads tables from all
   databases you will most likely have to connect as a database
   superuser in order to produce a complete dump.  Also you will need
   superuser privileges to execute the saved script in order to be
   allowed to add users and groups, and to create databases.
  </para>
-->
<para>
因为<application>pg_dumpall</application>从所有数据库中读取表，
所以你很可能需要以数据库超级用户的身份连接，这样才能生成完整的转储。同样，
你也需要超级用户的权限执行保存下来的脚本，这些才能增加用户和组，以及创建数据库。
</para>

  <!--
<para>
   The SQL script will be written to the standard output.  Use the
   [-f|file] option or shell operators to redirect it into a file.
  </para>
-->
<para>
SQL 脚本将写出到标准输出。使用[-f|file]选项或 shell 操作符把它重定向到文件。
</para>

  <!--
<para>
  <application>pg_dumpall</application> needs to connect several
  times to the <productname>PostgreSQL</productname> server (once per
  database).  If you use password authentication it will ask for
  a password each time. It is convenient to have a
  <filename>~/.pgpass</> file in such cases. See <xref
  linkend="libpq-pgpass"> for more information.
  </para>
-->
<para>
<application>pg_dumpall</application>需要和<productname>PostgreSQL</productname>
服务器连接多次(每个数据库一次)。如果你使用口令认证，可能每次都会询问口令。
这种情况下写一个<filename>~/.pgpass</>可能会比较方便。
参阅<xref linkend="libpq-pgpass">获取更多信息。
</para>

 </refsect1>

 <refsect1>
  <!-- 
  <title>Options</title> 
  -->
  <title>选项</title>

   
<para>
<!-- 
    The following command-line options control the content and
    format of the output.
 -->
 下列命令行参数用于控制输出内容和格式：
    <variablelist>
     <varlistentry>
      <term><option>-a</></term>
      <term><option>--data-only</></term>
      <listitem>
<!--       <para>
        Dump only the data, not the schema (data definitions).
       </para>
-->
<para>
只转储数据，不转储模式(数据定义)。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--clean</option></term>
      <listitem>
       <!--
<para>
        Include SQL commands to clean (drop) databases before
        recreating them.  <command>DROP</> commands for roles and
        tablespaces are added as well.
       </para>
-->
<para>
在转储结果中包含那些重建之前清理(drop)数据库对象的 SQL 命令。
对规则和表空间的<command>DROP</>也会添加进来。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-f <replaceable class="parameter">filename</replaceable></option></term>
      <term><option>--file=<replaceable class="parameter">filename</replaceable></option></term>
      <listitem>
       <!--
<para>
        Send output to the specified file.  If this is omitted, the
        standard output is used.
       </para>
-->
<para>
发送输出到指定的文件。如果省略了这个选项，就使用标准输出。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-g</option></term>
      <term><option>--globals-only</option></term>
      <listitem>
       <!--
<para>
        Dump only global objects (roles and tablespaces), no databases.
       </para>
-->
<para>
只转储全局对象(角色和表空间)，而不转储数据库。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-i</></term>
      <term><option>--ignore-version</></term>
      <listitem>
       <!--
<para>
        A deprecated option that is now ignored.
       </para>
-->
<para>
一个现在已经忽略了的废弃选项。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-o</></term>
      <term><option>--oids</></term>
      <listitem>
       <!--
<para>
        Dump object identifiers (<acronym>OID</acronym>s) as part of the
        data for every table.  Use this option if your application references
        the <acronym>OID</>
        columns in some way (e.g., in a foreign key constraint).
        Otherwise, this option should not be used.
       </para>
-->
<para>
作为数据的一部分，为每个表都输出对象标识(<acronym>OID</acronym>)。
如果你的应用需要<acronym>OID</>字段的话(比如在外键约束中用到)，那么使用这个选项。
否则，不应该使用这个选项。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</></term>
      <term><option>--no-owner</option></term>
      <listitem>
       <!--
<para>
        Do not output commands to set
        ownership of objects to match the original database.
        By default, <application>pg_dumpall</application> issues
        <command>ALTER OWNER</> or
        <command>SET SESSION AUTHORIZATION</command>
        statements to set ownership of created schema elements.
        These statements
        will fail when the script is run unless it is started by a superuser
        (or the same user that owns all of the objects in the script).
        To make a script that can be restored by any user, but will give
        that user ownership of all the objects, specify <option>-O</>.
       </para>
-->
<para>
不把对象的所有权设置为对应源数据库。<application>pg_dumpall</application>默认发出
<command>ALTER OWNER</>或<command>SET SESSION AUTHORIZATION</command>
语句以设置创建的数据库对象的所有权。如果这些脚本将来没有被超级用户
(或者拥有脚本中全部对象的用户)运行的话将会失败。<option>-O</>
选项就是为了让该脚本可以被任何用户恢复并且将脚本中对象的所有权赋予该选项指定的用户。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</option></term>
      <term><option>--roles-only</option></term>
      <listitem>
       <!--
<para>
        Dump only roles, no databases or tablespaces.
       </para>
-->
<para>
只转储角色，不转储数据库或表空间。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <term><option>--schema-only</option></term>
      <listitem>
       <!--
<para>
        Dump only the object definitions (schema), not data.
       </para>
-->
<para>
只输出对象定义(模式)，不输出数据。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">username</replaceable></option></term>
      <term><option>--superuser=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specify the superuser user name to use when disabling triggers.
        This is relevant only if <option>&#045;-disable-triggers</> is used.
        (Usually, it's better to leave this out, and instead start the
        resulting script as superuser.)
       </para>
-->
<para>
指定关闭触发器时需要用到的超级用户名。它只有使用了<option>--disable-triggers</>
的时候才有影响。一般情况下最好不要输入这个参数，而是用超级用户启动生成的脚本。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t</option></term>
      <term><option>--tablespaces-only</option></term>
      <listitem>
       <!--
<para>
        Dump only tablespaces, no databases or roles.
       </para>
-->
<para>
只转储表空间，不转储数据库或角色。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</></term>
      <term><option>--verbose</></term>
      <listitem>
       <!--
<para>
        Specifies verbose mode.  This will cause
        <application>pg_dumpall</application> to output start/stop
        times to the dump file, and progress messages to standard error.
        It will also enable verbose output in <application>pg_dump</>.
       </para>
-->
<para>
指定冗余模式。这样将令<application>pg_dumpall</application>
输出转储文件的启停时间和进度信息到标准错误上。它将同时启用<application>pg_dump</>的冗余输出。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</></term>
       <term><option>--version</></term>
       <listitem>
       <!--
<para>
       Print the <application>pg_dumpall</application> version and exit.
       </para>
-->
<para>
打印<application>pg_dumpall</application>的版本然后退出。
</para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</></term>
      <term><option>--no-privileges</></term>
      <term><option>--no-acl</></term>
      <listitem>
       <!--
<para>
        Prevent dumping of access privileges (grant/revoke commands).
       </para>
-->
<para>
禁止转储访问权限(grant/revoke 命令)。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--binary-upgrade</option></term>
      <listitem>
       <!--
<para>
        This option is for use by in-place upgrade utilities.  Its use
        for other purposes is not recommended or supported.  The
        behavior of the option may change in future releases without
        notice.
       </para>
-->
<para>
这个选项用于本地升级工具。不建议也不支持用于其他目的。
该选项的性能可能会在将来的版本中改变。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--column-inserts</option></term>
      <term><option>--attribute-inserts</option></term>
      <listitem>
       <!--
<para>
        Dump data as <command>INSERT</command> commands with explicit
        column names (<literal>INSERT INTO
        <replaceable>table</replaceable>
        (<replaceable>column</replaceable>, ...) VALUES
        ...</literal>).  This will make restoration very slow; it is mainly
        useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.
       </para>
-->
<para>
把数据转储为带有明确字段名的<command>INSERT</command>命令(<literal>INSERT INTO
 <replaceable>table</replaceable> (<replaceable>column</replaceable>, ...) VALUES
 ...</literal>)。这样会导致恢复非常缓慢，它主要用于制作那种可以用于其它非
<productname>PostgreSQL</productname>数据库的转储。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--disable-dollar-quoting</></term>
      <listitem>
       <!--
<para>
        This option disables the use of dollar quoting for function bodies,
        and forces them to be quoted using SQL standard string syntax.
       </para>
-->
<para>
这个选项关闭使用美元符界定函数体。强制它们用 SQL 标准的字符串语法的引号包围。
</para>
     </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>--disable-triggers</></term>
      <listitem>
       <!--
<para>
        This option is relevant only when creating a data-only dump.
        It instructs <application>pg_dumpall</application> to include commands
        to temporarily disable triggers on the target tables while
        the data is reloaded.  Use this if you have referential
        integrity checks or other triggers on the tables that you
        do not want to invoke during data reload.
       </para>
-->
<para>
这个选项只是和创建仅有数据的转储相关。它告诉<application>pg_dumpall</application>
包含在恢复数据时临时关闭目标表上触发器的命令。如果在表上有参照完整性检查或者其它触发器，
而恢复数据的时候不想重载他们，那么就应该使用这个选项。
</para>

       <!--
<para>
        Presently, the commands emitted for <option>&#045;-disable-triggers</>
        must be done as superuser.  So, you should also specify
        a superuser name with <option>-S</>, or preferably be careful to
        start the resulting script as a superuser.
       </para>
-->
<para>
目前，为<option>--disable-triggers</>发出的命令必须以超级用户来执行。因此，
你应该同时用<option>-S</>声明一个超级用户名，
或者最好是用一个超级用户的身份来启动这个生成的脚本。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--inserts</option></term>
      <listitem>
       <!--
<para>
        Dump data as <command>INSERT</command> commands (rather
        than <command>COPY</command>).  This will make restoration very slow;
        it is mainly useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.  Note that
        the restore might fail altogether if you have rearranged column order.
        The <option>&#045;-column-inserts</option> option is safer, though even
        slower.
       </para>
-->
<para>
把数据转储为<command>INSERT</command>命令(而不是<command>COPY</command>)。
这样将令恢复过程非常缓慢，这个选项主要用于制作那种可以用于其它非
<productname>PostgreSQL</productname>数据库的转储。请注意，
如果你重新排列了字段顺序，那么恢复可能会完全失败。<option>--column-inserts</option>
更安全，但是也更慢。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--lock-wait-timeout=<replaceable class="parameter">timeout</replaceable></option></term>
      <listitem>
       <!--
<para>
        Do not wait forever to acquire shared table locks at the beginning of
        the dump. Instead, fail if unable to lock a table within the specified
        <replaceable class="parameter">timeout</>. The timeout may be
        specified in any of the formats accepted by <command>SET
        statement_timeout</>.  Allowed values vary depending on the server
        version you are dumping from, but an integer number of milliseconds
        is accepted by all versions since 7.3.  This option is ignored when
        dumping from a pre-7.3 server.
       </para>
-->
<para>
在转储开始的时候不要等待请求一个共享表锁。相反，如果无法在指定的
<replaceable class="parameter">timeout</>内锁住表则失败。
timeout可以用任意<command>SET statement_timeout</>接受的格式声明。
允许的值依赖于你转储的服务器版本，但是自7.3以来，所有的版本都接受毫秒的整数值。
当从7.3以前的版本服务器中转储时，省略该选项。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-security-labels</option></term>
      <listitem>
       <!--
<para>
        Do not dump security labels.
       </para>
-->
<para>
不转储安全标签。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-tablespaces</option></term>
      <listitem>
       <!--
<para>
        Do not output commands to create tablespaces nor select tablespaces
        for objects.
        With this option, all objects will be created in whichever
        tablespace is the default during restore.
       </para>
-->
<para>
不要输出为对象创建表空间或选择表空间的命令。有了该选项，
所有对象在转储期间都将在缺省的表空间中创建。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-unlogged-table-data</option></term>
      <listitem>
       <!--
<para>
        Do not dump the contents of unlogged tables.  This option has no
        effect on whether or not the table definitions (schema) are dumped;
        it only suppresses dumping the table data.
       </para>
-->
<para>
不要转储未记录表的内容。该选项对于表定义（模式）是否转储没有影响；它只阻止转储表的数据。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--quote-all-identifiers</></term>
      <listitem>
       <!--
<para>
        Force quoting of all identifiers.  This may be useful when dumping a
        database for migration to a future version that may have introduced
        additional keywords.
       </para>
-->
<para>
强制给所有标识符加上引号。这在转储一个数据库到一个可能引入了额外关键字的新版本中时可能是有用的。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--use-set-session-authorization</></term>
      <listitem>
       <!--
<para>
        Output SQL-standard <command>SET SESSION AUTHORIZATION</> commands
        instead of <command>ALTER OWNER</> commands to determine object
        ownership.  This makes the dump more standards compatible, but
        depending on the history of the objects in the dump, might not restore
        properly.
       </para>
-->
<para>
输出符合 SQL 标准的<command>SET SESSION AUTHORIZATION</>命令而不是<command>ALTER OWNER</>
命令来确定对象所有权。这样令转储更加符合标准，但是如果转储文件中的对象的历史有些问题，
那么可能不能正确恢复。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</></term>
       <term><option>--help</></term>
       <listitem>
       <!--
<para>
       Show help about <application>pg_dumpall</application> command line
       arguments, and exit.
       </para>
-->
<para>
显示关于<application>pg_dumpall</application>命令行参数的帮助然后退出。
</para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

  
<para>
<!-- 
   The following command-line options control the database connection parameters.
 -->
 下面的命令行参数控制数据库的连接参数。
   <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
<!--
       <para>
        Specifies parameters used to connect to the server, as a connection
        string. See <xref linkend="libpq-connstring"> for more information.
       </para>
-->
<para>
指定用于连接到服务器的参数，作为连接字符串。参阅<xref linkend="libpq-connstring">获取更多信息。
</para>
       <!--
<para>
        The option is called <literal>&#045;-dbname</> for consistency with other
        client applications, but because <application>pg_dumpall</application>
        needs to connect to many databases, database name in the connection
        string will be ignored. Use <literal>-l</literal> option to specify
        the name of the database used to dump global objects and to discover
        what other databases should be dumped.
       </para>
-->
<para>
为了与其他客户端应用保持一致，这个选项被叫做<literal>--dbname</>，但是因为
<application>pg_dumpall</application>需要连接到多个数据库，所以连接字符串中的数据库名将会省略。
使用<literal>-l</literal>选项指定用于转储全局对象的数据库名和找出应该转储的其他数据库。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable>host</replaceable></option></term>
      <term><option>--host=<replaceable>host</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specifies the host name of the machine on which the database
        server is running.  If the value begins with a slash, it is
        used as the directory for the Unix domain socket.  The default
        is taken from the <envar>PGHOST</envar> environment variable,
        if set, else a Unix domain socket connection is attempted.
       </para>
-->
<para>
指定运行服务器的主机名。如果数值以斜杠开头，则被用作到 Unix 域套接字的路径。
缺省从<envar>PGHOST</envar>环境变量中获取(如果设置了的话)，否则，尝试一个 Unix 域套接字连接。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-l <replaceable>dbname</replaceable></option></term>
      <term><option>--database=<replaceable>dbname</replaceable></option></term>
      <listitem>
       <!--
<para>
         Specifies the name of the database to connect to to dump global
         objects and discover what other databases should be dumped. If
         not specified, the <literal>postgres</literal> database will be used,
         and if that does not exist, <literal>template1</literal> will be used.
       </para>
-->
<para>
指定用于转储全局对象的数据库名和找出应该转储的其他数据库。如果没有声明，
将使用<literal>postgres</literal>数据库，如果<literal>postgres</literal>数据库不存在，
则使用<literal>template1</literal>。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable>port</replaceable></option></term>
      <term><option>--port=<replaceable>port</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
       </para>
-->
<para>
指定服务器正在侦听的 TCP 端口或本地 Unix 域套接字文件的扩展(描述符)。
缺省使用<envar>PGPORT</envar>环境变量(如果设置了的话)，否则，编译时的缺省值。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable>username</replaceable></option></term>
      <listitem>
       <!--
<para>
        User name to connect as.
       </para>
-->
<para>
连接的用户名。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</></term>
      <term><option>--no-password</></term>
      <listitem>
       <!--
<para>
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
-->
<para>
从不发出密码提示问题。如果服务器要求密码认证并且密码不可用于其他意思如
<filename>.pgpass</filename>文件，则连接尝试将会失败。
该选项在批量工作和不存在用户输入密码的脚本中很有帮助。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <!--
<para>
        Force <application>pg_dumpall</application> to prompt for a
        password before connecting to a database.
       </para>
-->
<para>
强制<application>pg_dumpall</application>在连接到数据库之前提示一个密码。
</para>

       <!--
<para>
        This option is never essential, since
        <application>pg_dumpall</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_dumpall</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</> to avoid the extra
        connection attempt.
       </para>
-->
<para>
这个选项从来不是至关重要的，因为如果服务器需求密码认证，则<application>pg_dumpall</application>
自动提示一个密码。不过，<application>pg_dumpall</application>
将在找出服务器想要一个密码上浪费一个连接尝试。在某些情况下，值得输入<option>-W</>
以避免额外的连接尝试。
</para>

       <!--
<para>
        Note that the password prompt will occur again for each database
        to be dumped.  Usually, it's better to set up a
        <filename>~/.pgpass</> file than to rely on manual password entry.
       </para>
-->
<para>
请注意，密码提示将在每个要转储的数据库上发生。通常，建立一个<filename>~/.pgpass</>
文件比依赖于手动输入密码好的多。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <!--
<para>
        Specifies a role name to be used to create the dump.
        This option causes <application>pg_dumpall</> to issue a
        <command>SET ROLE</> <replaceable class="parameter">rolename</>
        command after connecting to the database. It is useful when the
        authenticated user (specified by <option>-U</>) lacks privileges
        needed by <application>pg_dumpall</>, but can switch to a role with
        the required rights.  Some installations have a policy against
        logging in directly as a superuser, and use of this option allows
        dumps to be made without violating the policy.
       </para>
-->
<para>
指定创建转储的角色名。这个选项导致连接到数据库之后<application>pg_dumpall</>
发出一个<command>SET ROLE</> <replaceable class="parameter">rolename</>命令。
当认证的用户（通过<option>-U</>指定）缺乏<application>pg_dumpall</>所需的权限时是很有用的，
可以转变成有所需权限的角色。一些安装有反对作为超级用户直接登录的政策，
使用这个选项允许转储不违反该政策。
</para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1>
  <!-- 
  <title>Environment</title> 
  -->
  <title>环境变量</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGOPTIONS</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <!--
<para>
      Default connection parameters
     </para>
-->
<para>
缺省连接参数。
</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <!--
<para>
   This utility, like most other <productname>PostgreSQL</> utilities,
   also uses the environment variables supported by <application>libpq</>
   (see <xref linkend="libpq-envars">).
  </para>
-->
<para>
这个功用，类似大多数其他<productname>PostgreSQL</>实用工具，
也使用由<application>libpq</>支持的环境变量（参阅<xref linkend="libpq-envars">）。
</para>

 </refsect1>


 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   Since <application>pg_dumpall</application> calls
   <application>pg_dump</application> internally, some diagnostic
   messages will refer to <application>pg_dump</application>.
  </para>
-->
<para>
因为<application>pg_dumpall</application>在内部调用<application>pg_dump</application>，
所以，一些诊断信息可以参考<application>pg_dump</application>。
</para>

  <!--
<para>
   Once restored, it is wise to run <command>ANALYZE</> on each
   database so the optimizer has useful statistics. You
   can also run <command>vacuumdb -a -z</> to analyze all
   databases.
  </para>
-->
<para>
恢复完之后，建议在每个已恢复的对象上运行<command>ANALYZE</>。
这样优化器就可以得到有用的统计。你也可以用<command>vacuumdb -a -z</>清理所有数据库。
</para>

  <!--
<para>
   <application>pg_dumpall</application> requires all needed
   tablespace directories to exist before the restore;  otherwise,
   database creation will fail for databases in non-default
   locations.
  </para>
-->
<para>
<application>pg_dumpall</application>要求所有需要的表空间目录在进行恢复之前就必须存在，
否则在非标准位置创建数据库将会失败。
</para>
 </refsect1>


 <refsect1 id="app-pg-dumpall-ex">
  <!--
<title>Examples</title>
-->
<title>例子</title>
  <!--
<para>
   To dump all databases:

<screen>
<prompt>$</prompt> <userinput>pg_dumpall &gt; db.out</userinput>
</screen>
  </para>
-->
<para>
转储所有数据库：
<screen>
<prompt>$</prompt> <userinput>pg_dumpall &gt; db.out</userinput>
</screen>
</para>

  <!--
<para>
   To reload database(s) from this file, you can use:
<screen>
<prompt>$</prompt> <userinput>psql -f db.out postgres</userinput>
</screen>
   (It is not important to which database you connect here since the
   script file created by <application>pg_dumpall</application> will
   contain the appropriate commands to create and connect to the saved
   databases.)
  </para>
-->
<para>
从该文件中恢复数据库：
<screen>
<prompt>$</prompt> <userinput>psql -f db.out postgres</userinput>
</screen>
执行这个命令的时候连接到哪个数据库无关紧要，因为<application>pg_dumpall</application>
创建的脚本将会包含恰当的创建和连接数据库的命令。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <!--
<para>
    Check <xref linkend="app-pgdump"> for details on possible
    error conditions.
  </para>
-->
<para>
看看<xref linkend="app-pgdump">获取可能的错误条件的详细信息。
</para>
 </refsect1>

</refentry>

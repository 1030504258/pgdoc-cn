<!--
doc/src/sgml/ref/drop_opclass.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPOPCLASS">
 <refmeta>
  <refentrytitle>DROP OPERATOR CLASS</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP OPERATOR CLASS</refname>
  <refpurpose>删除一个操作符类</refpurpose>
 </refnamediv>

 <indexterm zone="sql-dropopclass">
  <primary>DROP OPERATOR CLASS</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DROP OPERATOR CLASS [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable> USING <replaceable class="PARAMETER">index_method</replaceable> [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!-- 
  <title>Description</title> 
  -->
  <title>描述</title>

  <!--
<para>
   <command>DROP OPERATOR CLASS</command> drops an existing operator class.
   To execute this command you must be the owner of the operator class.
  </para>
-->
<para>
<command>DROP OPERATOR CLASS</command>删除一个现有操作符类。要执行这条命令，
你必须是此操作符类的所有者。
</para>

  <!--
<para>
   <command>DROP OPERATOR CLASS</command> does not drop any of the operators
   or functions referenced by the class.  If there are any indexes depending
   on the operator class, you will need to specify
   <literal>CASCADE</> for the drop to complete.
  </para>
-->
<para>
<command>DROP OPERATOR CLASS</command>不删除被类引用的任何操作符或函数。
如果有任何索引依赖于该操作符类，必须声明<literal>CASCADE</>来全部删除。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>

   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the operator class does not exist. A notice is issued
      in this case.
     </para>
-->
<para>
如果指定的操作符类不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of an existing operator class.
     </para>
-->
<para>
一个现存操作符类的名字(可以用模式修饰)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
     <!--
<para>
      The name of the index access method the operator class is for.
     </para>
-->
<para>
操作符类所引用的索引访问方法的名字。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <!--
<para>
      Automatically drop objects that depend on the operator class.
     </para>
-->
<para>
级联删除依赖于该操作符类的对象。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <!--
<para>
      Refuse to drop the operator class if any objects depend on it.
      This is the default.
     </para>
-->
<para>
如果有任何依赖对象存在，则拒绝删除此操作符类。这个行为是缺省。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   <command>DROP OPERATOR CLASS</> will not drop the operator family
   containing the class, even if there is nothing else left in the
   family (in particular, in the case where the family was implicitly
   created by <command>CREATE OPERATOR CLASS</>).  An empty operator
   family is harmless, but for the sake of tidiness you might wish to
   remove the family with <command>DROP OPERATOR FAMILY</>; or perhaps
   better, use <command>DROP OPERATOR FAMILY</> in the first place.
  </para>
-->
<para>
<command>DROP OPERATOR CLASS</>不会删除包含该类的操作符族，即使没有其他东西存在于族中也一样
（尤其是，族是由<command>CREATE OPERATOR CLASS</>创建的时）。一个空的操作符族是无害的，
但是为了整洁你可能希望用<command>DROP OPERATOR FAMILY</>删除这个族；
或更直接的在一开始就使用<command>DROP OPERATOR FAMILY</>。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   Remove the B-tree operator class <literal>widget_ops</literal>:

<programlisting>
DROP OPERATOR CLASS widget_ops USING btree;
</programlisting>

   This command will not succeed if there are any existing indexes
   that use the operator class.  Add <literal>CASCADE</> to drop
   such indexes along with the operator class.
  </para>
-->
<para>
删除 B-tree 操作符类<literal>widget_ops</literal>：
<programlisting>
DROP OPERATOR CLASS widget_ops USING btree;
</programlisting>
如果有任何现存的索引使用这个操作符类，那么这条命令将不能执行。
增加一个<literal>CASCADE</>删除这样的索引以及这个操作符类。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   There is no <command>DROP OPERATOR CLASS</command> statement in the
   SQL standard.
  </para>
-->
<para>
SQL 标准里没有<command>DROP OPERATOR CLASS</command>语句。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropclass"></member>
   <member><xref linkend="sql-createopclass"></member>
   <member><xref linkend="sql-dropopfamily"></member>
  </simplelist>
 </refsect1>

</refentry>

<!--
doc/src/sgml/ref/drop_schema.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPSCHEMA">
 <refmeta>
  <refentrytitle>DROP SCHEMA</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP SCHEMA</refname>
  <!-- 
  <refpurpose>remove a schema</refpurpose> 
  -->
  <refpurpose>删除一个模式</refpurpose>
 </refnamediv>

 <indexterm zone="sql-dropschema">
  <primary>DROP SCHEMA</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DROP SCHEMA [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable> [, ...] [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>DROP SCHEMA</command> removes schemas from the database.
  </para>
-->
<para>
<command>DROP SCHEMA</command>从数据库中删除模式。
</para>

  <!--
<para>
   A schema can only be dropped by its owner or a superuser.  Note that
   the owner can drop the schema (and thereby all contained objects)
   even if he does not own some of the objects within the schema.
  </para>
-->
<para>
模式只能被它的所有者或者超级用户删除。请注意，
所有者即使没有拥有模式中任何对象也可以删除模式(以及模式中的所有对象)。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the schema does not exist. A notice is issued
      in this case.
     </para>
-->
<para>
如果指定的模式不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name of a schema.
     </para>
-->
<para>
模式的名字。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <!--
<para>
      Automatically drop objects (tables, functions, etc.) that are
      contained in the schema.
     </para>
-->
<para>
自动删除包含在模式中的对象(表、函数等等)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <!--
<para>
      Refuse to drop the schema if it contains any objects.  This is
      the default.
     </para>
-->
<para>
如果模式包含任何对象，则拒绝删除它。这个是缺省。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To remove schema <literal>mystuff</literal> from the database,
   along with everything it contains:

<programlisting>
DROP SCHEMA mystuff CASCADE;
</programlisting></para>
-->
<para>
从数据库中删除模式<literal>mystuff</literal>以及它包含的所有东西：
<programlisting>
DROP SCHEMA mystuff CASCADE;
</programlisting>
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <command>DROP SCHEMA</command> is fully conforming with the SQL
   standard, except that the standard only allows one schema to be
   dropped per command, and apart from the
   <literal>IF EXISTS</> option, which is a <productname>PostgreSQL</>
   extension.
  </para>
-->
<para>
<command>DROP SCHEMA</command>和 SQL 标准完全兼容，只不过标准只允许每条命令删除一个模式。
另外，<literal>IF EXISTS</>选项是<productname>PostgreSQL</>扩展。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterschema"></member>
   <member><xref linkend="sql-createschema"></member>
  </simplelist>
 </refsect1>

</refentry>

<!--
doc/src/sgml/ref/fetch.sgml
PostgreSQL documentation
-->

<refentry id="SQL-FETCH">
 <refmeta>
  <refentrytitle>FETCH</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>FETCH</refname>
  <!-- 
  <refpurpose>retrieve rows from a query using a cursor</refpurpose> 
  -->
  <refpurpose>用游标从查询中抓取行</refpurpose>
 </refnamediv>

 <indexterm zone="sql-fetch">
  <primary>FETCH</primary>
 </indexterm>

 <indexterm zone="sql-fetch">
  <!-- 
  <primary>cursor</primary> 
  -->
  <primary>游标</primary>
  <secondary>FETCH</secondary>
 </indexterm>

 <refsynopsisdiv>
<!-- Note the "direction" bit is also in ref/move.sgml -->
<synopsis>
FETCH [ <replaceable class="PARAMETER">direction</replaceable> [ FROM | IN ] ] <replaceable class="PARAMETER">cursor_name</replaceable>

<!-- 
<phrase>where <replaceable class="PARAMETER">direction</replaceable> can be empty or one of:</phrase> 
-->
<phrase>这里的 <replaceable class="PARAMETER">direction</replaceable> 可以为空或下列之一:</phrase>

    NEXT
    PRIOR
    FIRST
    LAST
    ABSOLUTE <replaceable class="PARAMETER">count</replaceable>
    RELATIVE <replaceable class="PARAMETER">count</replaceable>
    <replaceable class="PARAMETER">count</replaceable>
    ALL
    FORWARD
    FORWARD <replaceable class="PARAMETER">count</replaceable>
    FORWARD ALL
    BACKWARD
    BACKWARD <replaceable class="PARAMETER">count</replaceable>
    BACKWARD ALL
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   <command>FETCH</command> retrieves rows using a previously-created cursor.
  </para>
-->
<para>
<command>FETCH</command>使用游标检索行。
</para>

  <!--
<para>
   A cursor has an associated position, which is used by
   <command>FETCH</>.  The cursor position can be before the first row of the
   query result, on any particular row of the result, or after the last row
   of the result.  When created, a cursor is positioned before the first row.
   After fetching some rows, the cursor is positioned on the row most recently
   retrieved.  If <command>FETCH</> runs off the end of the available rows
   then the cursor is left positioned after the last row, or before the first
   row if fetching backward.  <command>FETCH ALL</> or <command>FETCH BACKWARD
   ALL</> will always leave the cursor positioned after the last row or before
   the first row.
  </para>
-->
<para>
一个游标有一个由<command>FETCH</>使用的相关联的位置。游标的位置可以在查询结果的第一行之前，
或者在结果中的任意行，或者在结果的最后一行之后。刚创建完之后，游标是放在第一行之前的。
在抓取了一些行之后，游标放在检索到的最后一行上。如果<command>FETCH</>抓完了所有可用行，
那么它就停在最后一行后面，或者在反向抓取的情况下是停在第一行前面。<command>FETCH ALL</>
或<command>FETCH BACKWARD ALL</>将总是把游标的位置放在最后一行或者在第一行前面。
</para>

  <!--
<para>
   The forms <literal>NEXT</>, <literal>PRIOR</>, <literal>FIRST</>,
   <literal>LAST</>, <literal>ABSOLUTE</>, <literal>RELATIVE</> fetch
   a single row after moving the cursor appropriately.  If there is no
   such row, an empty result is returned, and the cursor is left
   positioned before the first row or after the last row as
   appropriate.
  </para>
-->
<para>
<literal>NEXT</>, <literal>PRIOR</>, <literal>FIRST</>, <literal>LAST</>, 
<literal>ABSOLUTE</>, <literal>RELATIVE</>形式在恰当地移动游标之后抓取一个行。
如果没有数据行了，那么返回一个空的结果，此时游标就会停在查询结果的最后一行之后或者第一行之前。
</para>

  <!--
<para>
   The forms using <literal>FORWARD</> and <literal>BACKWARD</>
   retrieve the indicated number of rows moving in the forward or
   backward direction, leaving the cursor positioned on the
   last-returned row (or after/before all rows, if the <replaceable
   class="PARAMETER">count</replaceable> exceeds the number of rows
   available).
  </para>
-->
<para>
<literal>FORWARD</>和<literal>BACKWARD</>形式在向前或者向后移动的过程中抓取指定的行数，
然后把游标定位在最后返回的行上；或者是，如果<replaceable class="PARAMETER">count</replaceable>
大于可用的行数，则在所有行之前或之后。
</para>

  <!--
<para>
   <literal>RELATIVE 0</>, <literal>FORWARD 0</>, and
   <literal>BACKWARD 0</> all request fetching the current row without
   moving the cursor, that is, re-fetching the most recently fetched
   row.  This will succeed unless the cursor is positioned before the
   first row or after the last row; in which case, no row is returned.
  </para>
-->
<para>
<literal>RELATIVE 0</>, <literal>FORWARD 0</>, <literal>BACKWARD 0</>
都要求在不移动游标的前提下抓取当前行，也就是重新抓取最近刚刚抓取过的行。
除非游标定位在第一行之前或者最后一行之后，这个动作都应该成功，
而在那两种情况下，不返回任何行。
</para>

  <note>
   <!--
<para>
    This page describes usage of cursors at the SQL command level.
    If you are trying to use cursors inside a <application>PL/pgSQL</>
    function, the rules are different &mdash;
    see <xref linkend="plpgsql-cursors">.
   </para>
-->
<para>
本页描述在SQL命令级别的游标的使用。如果你尝试在<application>PL/pgSQL</>
里使用游标，那么规则是不同的，参阅<xref linkend="plpgsql-cursors">。
</para>
  </note>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">direction</replaceable></term>
    <listitem>
     
<para>
<!-- 
<replaceable class="PARAMETER">direction</replaceable> defines
      the fetch direction and number of rows to fetch.  It can be one
      of the following:
 -->
<replaceable class="PARAMETER">direction</replaceable>定义抓取的方向和抓取的行数。
它可以是下述之一：
      <variablelist>
       <varlistentry>
        <term><literal>NEXT</literal></term>
        <listitem>
<!--
         <para>
          Fetch the next row. This is the default if <replaceable
          class="PARAMETER">direction</replaceable> is omitted.
         </para>
-->
<para>
抓取下一行(缺省)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>PRIOR</literal></term>
        <listitem>
         <!--
<para>
          Fetch the prior row.
         </para>
-->
<para>
抓取前面一行。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FIRST</literal></term>
        <listitem>
         <!--
<para>
          Fetch the first row of the query (same as <literal>ABSOLUTE 1</literal>).
         </para>
-->
<para>
抓取查询的第一行(和<literal>ABSOLUTE 1</literal>相同)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>LAST</literal></term>
        <listitem>
         <!--
<para>
          Fetch the last row of the query (same as <literal>ABSOLUTE -1</literal>).
         </para>
-->
<para>
抓取查询的最后一行(和<literal>ABSOLUTE -1</literal>相同)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ABSOLUTE <replaceable class="PARAMETER">count</replaceable></literal></term>
        <listitem>
         <!--
<para>
          Fetch the <replaceable
          class="PARAMETER">count</replaceable>'th row of the query,
          or the <literal>abs(<replaceable
          class="PARAMETER">count</replaceable>)</literal>'th row from
          the end if <replaceable
          class="PARAMETER">count</replaceable> is negative.  Position
          before first row or after last row if <replaceable
          class="PARAMETER">count</replaceable> is out of range; in
          particular, <literal>ABSOLUTE 0</literal> positions before
          the first row.
         </para>
-->
<para>
抓取查询中第<replaceable class="PARAMETER">count</replaceable>行，或者如果
<replaceable class="PARAMETER">count</replaceable>为负就从查询结果末尾抓取第
<literal>abs(<replaceable class="PARAMETER">count</replaceable>)</literal>行。
如果<replaceable class="PARAMETER">count</replaceable>超出了范围，
那么定位在第一行之前和最后一行之后的位置；特别是<literal>ABSOLUTE 0</literal>定位在第一行之前。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>RELATIVE <replaceable class="PARAMETER">count</replaceable></literal></term>
        <listitem>
         <!--
<para>
          Fetch the <replaceable
          class="PARAMETER">count</replaceable>'th succeeding row, or
          the <literal>abs(<replaceable
          class="PARAMETER">count</replaceable>)</literal>'th prior
          row if <replaceable class="PARAMETER">count</replaceable> is
          negative.  <literal>RELATIVE 0</literal> re-fetches the
          current row, if any.
         </para>
-->
<para>
抓取随后的第<replaceable class="PARAMETER">count</replaceable>行，或者如果
<replaceable class="PARAMETER">count</replaceable>为负就抓取前面的第
<literal>abs(<replaceable class="PARAMETER">count</replaceable>)</literal>行。
如果有数据的话，<literal>RELATIVE 0</literal>重新抓取当前行。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><replaceable class="PARAMETER">count</replaceable></term>
        <listitem>
         <!--
<para>
          Fetch the next <replaceable
          class="PARAMETER">count</replaceable> rows (same as
          <literal>FORWARD <replaceable
          class="PARAMETER">count</replaceable></literal>).
         </para>
-->
<para>
抓取随后的<replaceable class="PARAMETER">count</replaceable>行(和
<literal>FORWARD <replaceable class="PARAMETER">count</replaceable></literal>一样)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ALL</literal></term>
        <listitem>
         <!--
<para>
          Fetch all remaining rows (same as <literal>FORWARD ALL</literal>).
         </para>
-->
<para>
抓取所有剩余的行(和<literal>FORWARD ALL</literal>一样)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD</literal></term>
        <listitem>
         <!--
<para>
          Fetch the next row (same as <literal>NEXT</literal>).
         </para>
-->
<para>
抓取下一行(和<literal>NEXT</literal>一样)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD <replaceable class="PARAMETER">count</replaceable></literal></term>
        <listitem>
         <!--
<para>
          Fetch the next <replaceable
          class="PARAMETER">count</replaceable> rows.
          <literal>FORWARD 0</literal> re-fetches the current row.
         </para>
-->
<para>
抓取随后的<replaceable class="PARAMETER">count</replaceable>行。
<literal>FORWARD 0</literal>重新抓取当前行。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD ALL</literal></term>
        <listitem>
         <!--
<para>
          Fetch all remaining rows.
         </para>
-->
<para>
抓取所有剩余行。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD</literal></term>
        <listitem>
         <!--
<para>
          Fetch the prior row (same as <literal>PRIOR</literal>).
         </para>
-->
<para>
抓取前面一行(和<literal>PRIOR</literal>一样)。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD <replaceable class="PARAMETER">count</replaceable></literal></term>
        <listitem>
         <!--
<para>
          Fetch the prior <replaceable
          class="PARAMETER">count</replaceable> rows (scanning
          backwards).  <literal>BACKWARD 0</literal> re-fetches the
          current row.
         </para>
-->
<para>
抓取前面的<replaceable class="PARAMETER">count</replaceable> 行(向后扫描)。
<literal>BACKWARD 0</literal>重新抓取当前行。
</para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD ALL</literal></term>
        <listitem>
         <!--
<para>
          Fetch all prior rows (scanning backwards).
         </para>
-->
<para>
抓取所有前面的行(向后扫描)。
</para>
        </listitem>
       </varlistentry>
      </variablelist></para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">count</replaceable></term>
    <listitem>
     <!--
<para><replaceable class="PARAMETER">count</replaceable> is a
      possibly-signed integer constant, determining the location or
      number of rows to fetch.  For <literal>FORWARD</> and
      <literal>BACKWARD</> cases, specifying a negative <replaceable
      class="PARAMETER">count</replaceable> is equivalent to changing
      the sense of <literal>FORWARD</> and <literal>BACKWARD</>.
     </para>
-->
<para>
<replaceable class="PARAMETER">count</replaceable>可能是一个有符号的整数常量，
决定要抓取的行数和方向。对于<literal>FORWARD</>和<literal>BACKWARD</>的情况，
声明一个带负号的<replaceable class="PARAMETER">count</replaceable>等效于改变
<literal>FORWARD</>和<literal>BACKWARD</>的方向。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">cursor_name</replaceable></term>
    <listitem>
     <!--
<para>
      An open cursor's name.
     </para>
-->
<para>
一个打开的游标的名称。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <!-- 
  <title>Outputs</title> 
  -->
  <title>输出</title>

  <!--
<para>
   On successful completion, a <command>FETCH</> command returns a command
   tag of the form
<screen>
FETCH <replaceable class="parameter">count</replaceable>
</screen>
   The <replaceable class="parameter">count</replaceable> is the number
   of rows fetched (possibly zero).  Note that in
   <application>psql</application>, the command tag will not actually be
   displayed, since <application>psql</application> displays the fetched
   rows instead.
  </para>
-->
<para>
成功完成时，一个<command>FETCH</>命令返回一个形如下面的标记
<screen>
FETCH <replaceable class="parameter">count</replaceable>
</screen>
这里的<replaceable class="parameter">count</replaceable>是抓取的行数(可能是零)。
请注意在<application>psql</application>里，命令标签实际上不会显示，
因为<application>psql</application>用抓取的行数代替了。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   The cursor should be declared with the <literal>SCROLL</literal>
   option if one intends to use any variants of <command>FETCH</>
   other than <command>FETCH NEXT</> or <command>FETCH FORWARD</> with
   a positive count.  For simple queries
   <productname>PostgreSQL</productname> will allow backwards fetch
   from cursors not declared with <literal>SCROLL</literal>, but this
   behavior is best not relied on. If the cursor is declared with
   <literal>NO SCROLL</literal>, no backward fetches are allowed.
  </para>
-->
<para>
如果你想使用<command>FETCH NEXT</>之外的任何<command>FETCH</>变种，或者是带负数计数的
<command>FETCH FORWARD</>，那么定义游标的时候应该带上<literal>SCROLL</literal>选项。
对于简单的查询，<productname>PostgreSQL</productname>会允许那些没有带<literal>SCROLL</literal>
选项定义的游标也可以反向抓取，但是最好不要依赖这个行为。如果游标定义了
<literal>NO SCROLL</literal>，那么不允许反向抓取。
</para>

  <!--
<para>
   <literal>ABSOLUTE</literal> fetches are not any faster than
   navigating to the desired row with a relative move: the underlying
   implementation must traverse all the intermediate rows anyway.
   Negative absolute fetches are even worse: the query must be read to
   the end to find the last row, and then traversed backward from
   there.  However, rewinding to the start of the query (as with
   <literal>FETCH ABSOLUTE 0</literal>) is fast.
  </para>
-->
<para>
<literal>ABSOLUTE</literal>抓取不会比用相对位移移动到需要的数据行更快：
因为下层的实现必须遍历所有中间的行。负数的绝对抓取甚至更糟糕：
查询必须一直读到结尾才能找到最后一行，然后从那里开始反向遍历。不过，
回退到查询开头(比如<literal>FETCH ABSOLUTE 0</literal>)很快。
</para>

  <!--
<para>
   <xref linkend="sql-declare">
   is used to define a cursor.  Use
   <xref linkend="sql-move">
   to change cursor position without retrieving data.
  </para>
-->
<para>
使用<xref linkend="sql-declare">语句定义一个游标。<xref linkend="sql-move">
语句改变游标位置而不检索数据。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>


<para>
  <!--
   The following example traverses a table using a cursor:
-->
下面的例子用一个游标跨过一个表。
<programlisting>
BEGIN WORK;

<!-- 
&#045;- Set up a cursor: 
-->
-- 建立一个游标:
DECLARE liahona SCROLL CURSOR FOR SELECT * FROM films;

<!-- 
&#045;- Fetch the first 5 rows in the cursor liahona: 
-->
-- 抓取头5行到游标liahona里:
FETCH FORWARD 5 FROM liahona;

 code  |          title          | did | date_prod  |   kind   |  len
-------+-------------------------+-----+------------+----------+-------
 BL101 | The Third Man           | 101 | 1949-12-23 | Drama    | 01:44
 BL102 | The African Queen       | 101 | 1951-08-11 | Romantic | 01:43
 JL201 | Une Femme est une Femme | 102 | 1961-03-12 | Romantic | 01:25
 P_301 | Vertigo                 | 103 | 1958-11-14 | Action   | 02:08
 P_302 | Becket                  | 103 | 1964-02-03 | Drama    | 02:28

<!--
&#045;- Fetch the previous row: 
-->
-- 抓取前面行:
FETCH PRIOR FROM liahona;

 code  |  title  | did | date_prod  |  kind  |  len
-------+---------+-----+------------+--------+-------
 P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08

<!-- 
&#045;- Close the cursor and end the transaction: 
-->
-- 关闭游标并提交事务:
CLOSE liahona;
COMMIT WORK;
</programlisting></para>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   The SQL standard defines <command>FETCH</command> for use in
   embedded SQL only.  The variant of <command>FETCH</command>
   described here returns the data as if it were a
   <command>SELECT</command> result rather than placing it in host
   variables.  Other than this point, <command>FETCH</command> is
   fully upward-compatible with the SQL standard.
  </para>
-->
<para>
SQL 标准定义的<command>FETCH</command>只用于嵌入式环境下。这里描述的
<command>FETCH</command>变种是把结果数据像<command>SELECT</command>结果那样返回，
而不是把它放在属主变量里。除了这点之外，<command>FETCH</command>
和 SQL 标准完全向前兼容。
</para>

  <!--
<para>
   The <command>FETCH</command> forms involving
   <literal>FORWARD</literal> and <literal>BACKWARD</literal>, as well
   as the forms <literal>FETCH <replaceable
   class="PARAMETER">count</replaceable></literal> and <literal>FETCH
   ALL</literal>, in which <literal>FORWARD</literal> is implicit, are
   <productname>PostgreSQL</productname> extensions.
  </para>
-->
<para>
涉及<literal>FORWARD</literal>和<literal>BACKWARD</literal>的<command>FETCH</command>形式，
包括<literal>FETCH <replaceable class="PARAMETER">count</replaceable></literal>和
<literal>FETCH ALL</literal>形式(此时<literal>FORWARD</literal>是隐含的)，
是<productname>PostgreSQL</productname>的扩展。
</para>

  <!--
<para>
   The SQL standard allows only <literal>FROM</> preceding the cursor
   name; the option to use <literal>IN</>, or to leave them out altogether, is
   an extension.
  </para>
-->
<para>
SQL 标准只允许游标前面有<literal>FROM</>，可选的<literal>IN</>，或者把它们都省去，是一个扩展。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-close"></member>
   <member><xref linkend="sql-declare"></member>
   <member><xref linkend="sql-move"></member>
  </simplelist>
 </refsect1>
</refentry>

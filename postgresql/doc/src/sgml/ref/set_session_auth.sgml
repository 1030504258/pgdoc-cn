<!-- doc/src/sgml/ref/set_session_auth.sgml -->
<refentry id="SQL-SET-SESSION-AUTHORIZATION">
 <refmeta>
  <refentrytitle>SET SESSION AUTHORIZATION</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET SESSION AUTHORIZATION</refname>
  <!-- 
  <refpurpose>set the session user identifier and the current user identifier of the current session</refpurpose> 
  -->
  <refpurpose>为当前会话设置会话用户标识符和当前用户标识符</refpurpose>
 </refnamediv>

 <indexterm zone="sql-set-session-authorization">
  <primary>SET SESSION AUTHORIZATION</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
SET [ SESSION | LOCAL ] SESSION AUTHORIZATION <replaceable class="parameter">user_name</replaceable>
SET [ SESSION | LOCAL ] SESSION AUTHORIZATION DEFAULT
RESET SESSION AUTHORIZATION
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   This command sets the session user identifier and the current user
   identifier of the current SQL session to be <replaceable
   class="parameter">user_name</replaceable>.  The user name can be
   written as either an identifier or a string literal.  Using this
   command, it is possible, for example, to temporarily become an
   unprivileged user and later switch back to being a superuser.
  </para>
-->
<para>
这条命令把当前会话里的会话用户标识和当前用户标识都设置为
<replaceable class="parameter">user_name</replaceable>。这个用户名可以写成一个标识符或者一个字符串文本。
使用这个命令，可以临时变成一个非特权用户，稍后再切换回超级用户。
</para>

  <!--
<para>
   The session user identifier is initially set to be the (possibly
   authenticated) user name provided by the client.  The current user
   identifier is normally equal to the session user identifier, but
   might change temporarily in the context of <literal>SECURITY DEFINER</>
   functions and similar mechanisms; it can also be changed by
   <xref linkend="sql-set-role">.
   The current user identifier is relevant for permission checking.
  </para>
-->
<para>
会话用户标识符一开始设置为(可能经过认证的)客户端提供的用户名。
当前用户标识符通常等于会话用户标识符，但是可能在<literal>SECURITY DEFINER</>
的环境里或者类似的机制里临时改变。也可以用<xref linkend="sql-set-role">来修改。
当前用户的身份和权限检查有关。
</para>

  <!--
<para>
   The session user identifier can be changed only if the initial session
   user (the <firstterm>authenticated user</firstterm>) had the
   superuser privilege.  Otherwise, the command is accepted only if it
   specifies the authenticated user name.
  </para>
-->
<para>
只有在最开始登录时使用的用户(<firstterm>已认证用户</firstterm>)具有超级用户权限，会话用户标识符才能改变成其它用户。否则，只能使用登录时使用认证用户，系统才接受该命令。
</para>

  <!--
<para>
   The <literal>SESSION</> and <literal>LOCAL</> modifiers act the same
   as for the regular <xref linkend="SQL-SET">
   command.
  </para>
-->
<para>
<literal>SESSION</>和<literal>LOCAL</>修饰词和普通<xref linkend="SQL-SET">命令里的作用相同。
</para>

  <!--
<para>
   The <literal>DEFAULT</> and <literal>RESET</> forms reset the session
   and current user identifiers to be the originally authenticated user
   name.  These forms can be executed by any user.
  </para>
-->
<para>
<literal>DEFAULT</>和<literal>RESET</>形式重置会话和当前用户标识符为初始认证的用户名。
这些形式可以为任何用户执行。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   <command>SET SESSION AUTHORIZATION</> cannot be used within a
   <literal>SECURITY DEFINER</> function.
  </para>
-->
<para>
<command>SET SESSION AUTHORIZATION</>不能用在<literal>SECURITY DEFINER</>函数内。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

<programlisting>
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | peter

SET SESSION AUTHORIZATION 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 paul         | paul
</programlisting>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   The SQL standard allows some other expressions to appear in place
   of the literal <replaceable>user_name</replaceable>, but these options
   are not important in practice.  <productname>PostgreSQL</productname>
   allows identifier syntax (<literal>"username"</literal>), which SQL
   does not.  SQL does not allow this command during a transaction;
   <productname>PostgreSQL</productname> does not make this
   restriction because there is no reason to.
   The <literal>SESSION</> and <literal>LOCAL</> modifiers are a
   <productname>PostgreSQL</productname> extension, as is the
   <literal>RESET</> syntax.
  </para>
-->
<para>
SQL 标准允许一些其它的表达式出现在文本<replaceable>user_name</replaceable>的位置上，
不过这个东西实际上并不重要。<productname>PostgreSQL</productname>允许标识符语法
(<literal>"username"</literal>)，而 SQL 不允许。SQL 不允许在一个事务的过程中用这条命令；
<productname>PostgreSQL</productname>没有这个限制，因为没有什么理由不允许这样用。
<literal>SESSION</>和<literal>LOCAL</>是<productname>PostgreSQL</productname>扩展，
<literal>RESET</>语法也是。
</para>

  <!--
<para>
   The privileges necessary to execute this command are left
   implementation-defined by the standard.
  </para>
-->
<para>
标准里头把执行这个命令所需的必要权限，交给具体的数据库实现自己去定义。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-role"></member>
  </simplelist>
 </refsect1>
</refentry>
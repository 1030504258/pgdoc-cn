<!--
doc/src/sgml/ref/drop_domain.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPDOMAIN">
 <refmeta>
  <refentrytitle>DROP DOMAIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP DOMAIN</refname>
  <!-- 
  <refpurpose>remove a domain</refpurpose> 
  -->
  <refpurpose>删除一个域</refpurpose>
 </refnamediv>

 <indexterm zone="sql-dropdomain">
  <primary>DROP DOMAIN</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DROP DOMAIN [ IF EXISTS ] <replaceable class="PARAMETER">name</replaceable> [, ...] [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!-- 
  <title>Description</title> 
  -->
  <title>描述</title>

  <!--
<para>
   <command>DROP DOMAIN</command> removes a domain.  Only the owner of
   a domain can remove it.
  </para>
-->
<para>
<command>DROP DOMAIN</command>删除一个域。只有域的所有者才能删除它。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the domain does not exist. A notice is issued
      in this case.
     </para>
-->
<para>
如果指定的域不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of an existing domain.
     </para>
-->
<para>
一个现有的域(可以有模式修饰)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</></term>
    <listitem>
     <!--
<para>
      Automatically drop objects that depend on the domain (such as
      table columns).
     </para>
-->
<para>
级联删除依赖该域的对象（例如表字段）。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</></term>
    <listitem>
     <!--
<para>
      Refuse to drop the domain if any objects depend on it.  This is
      the default.
     </para>
-->
<para>
如果有任何依赖对象存在，则拒绝删除此域。这个是缺省。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="SQL-DROPDOMAIN-examples">
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   To remove the domain <type>box</type>:

<programlisting>
DROP DOMAIN box;
</programlisting></para>
-->
<para>
删除<type>box</type>域：
<programlisting>
DROP DOMAIN box;
</programlisting>
</para>
 </refsect1>

 <refsect1 id="SQL-DROPDOMAIN-compatibility">
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   This command conforms to the SQL standard, except for the
   <literal>IF EXISTS</> option, which is a <productname>PostgreSQL</>
   extension.
  </para>
-->
<para>
这条命令兼容 SQL 标准，但<literal>IF EXISTS</>选项是一个<productname>PostgreSQL</>扩展。
</para>
 </refsect1>

 <refsect1 id="SQL-DROPDOMAIN-see-also">
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createdomain"></member>
   <member><xref linkend="sql-alterdomain"></member>
  </simplelist>
 </refsect1>

</refentry>

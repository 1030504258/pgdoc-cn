<!--
doc/src/sgml/ref/drop_function.sgml
PostgreSQL documentation
-->

<refentry id="SQL-DROPFUNCTION">
 <refmeta>
  <refentrytitle>DROP FUNCTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP FUNCTION</refname>
  <!-- 
  <refpurpose>remove a function</refpurpose> 
  -->
  <refpurpose>删除一个函数</refpurpose>
 </refnamediv>

 <indexterm zone="sql-dropfunction">
  <primary>DROP FUNCTION</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
DROP FUNCTION [ IF EXISTS ] <replaceable class="parameter">name</replaceable> ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] )
    [ CASCADE | RESTRICT ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!-- 
  <title>Description</title> 
  -->
  <title>描述</title>

  <!--
<para>
   <command>DROP FUNCTION</command> removes the definition of an existing
   function. To execute this command the user must be the
   owner of the function. The argument types to the
   function must be specified, since several different functions
   can exist with the same name and different argument lists.
  </para>
-->
<para>
<command>DROP FUNCTION</command>将删除一个现存的函数。要执行这条命令，用户必须是函数的所有者。
必须声明函数的参数类型，因为几个不同的函数可能会有同样的名字和不同的参数列表。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Parameters</title>
-->
<title>参数</title>

  <variablelist>
    <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <!--
<para>
      Do not throw an error if the function does not exist. A notice is issued
      in this case.
     </para>
-->
<para>
如果指定的函数不存在，那么发出一个 notice 而不是抛出一个错误。
</para>
    </listitem>
   </varlistentry>

  <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <!--
<para>
      The name (optionally schema-qualified) of an existing function.
     </para>
-->
<para>
现存的函数名称(可以有模式修饰)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>

    <listitem>
     <!--
<para>
      The mode of an argument: <literal>IN</>, <literal>OUT</>,
      <literal>INOUT</>, or <literal>VARIADIC</>.
      If omitted, the default is <literal>IN</>.
      Note that <command>DROP FUNCTION</command> does not actually pay
      any attention to <literal>OUT</> arguments, since only the input
      arguments are needed to determine the function's identity.
      So it is sufficient to list the <literal>IN</>, <literal>INOUT</>,
      and <literal>VARIADIC</> arguments.
     </para>
-->
<para>
参数的模式：<literal>IN</>(缺省), <literal>OUT</>, <literal>INOUT</>, <literal>VARIADIC</>。
请注意<command>DROP FUNCTION</command>实际上并不注意<literal>OUT</>参数，
因为判断函数的身份只需要输入参数。因此列出<literal>IN</>, <literal>INOUT</>和
<literal>VARIADIC</>参数就足够了。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>

    <listitem>
     <!--
<para>
      The name of an argument.
      Note that <command>DROP FUNCTION</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the function's identity.
     </para>
-->
<para>
参数的名字。请注意<command>DROP FUNCTION</command>实际上并不注意参数的名字，
因为判断函数的身份只需要输入参数的数据类型。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>

    <listitem>
     <!--
<para>
      The data type(s) of the function's arguments (optionally
      schema-qualified), if any.
     </para>
-->
<para>
如果有的话，是函数参数的类型(可以用模式修饰)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <!--
<para>
      Automatically drop objects that depend on the function (such as
      operators or triggers).
     </para>
-->
<para>
级联删除依赖于函数的对象(比如操作符或触发器)。
</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <!--
<para>
      Refuse to drop the function if any objects depend on it.  This
      is the default.
     </para>
-->
<para>
如果有任何依赖对象存在，则拒绝删除该函数。这个是缺省。
</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="SQL-DROPFUNCTION-examples">
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>
   This command removes the square root function:

<programlisting>
DROP FUNCTION sqrt(integer);
</programlisting></para>
-->
<para>
这条命令删除平方根函数：
<programlisting>
DROP FUNCTION sqrt(integer);
</programlisting>
</para>
 </refsect1>

 <refsect1 id="SQL-DROPFUNCTION-compatibility">
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   A <command>DROP FUNCTION</command> statement is defined in the SQL
   standard, but it is not compatible with this command.
  </para>
-->
<para>
SQL 标准里定义了一个<command>DROP FUNCTION</command>语句。但和这条命令不兼容。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createfunction"></member>
   <member><xref linkend="sql-alterfunction"></member>
  </simplelist>
 </refsect1>

</refentry>

<!--
doc/src/sgml/ref/set_role.sgml
PostgreSQL documentation
-->

<refentry id="SQL-SET-ROLE">
 <refmeta>
  <refentrytitle>SET ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <!--
<refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
<refmiscinfo>SQL - 语句</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET ROLE</refname>
  <!-- 
  <refpurpose>set the current user identifier of the current session</refpurpose> 
  -->
  <refpurpose>在当前会话中设置当前用户标识</refpurpose>
 </refnamediv>

 <indexterm zone="sql-set-role">
  <primary>SET ROLE</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
SET [ SESSION | LOCAL ] ROLE <replaceable class="parameter">role_name</replaceable>
SET [ SESSION | LOCAL ] ROLE NONE
RESET ROLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>

  <!--
<para>
   This command sets the current user
   identifier of the current SQL session to be <replaceable
   class="parameter">role_name</replaceable>.  The role name can be
   written as either an identifier or a string literal.
   After <command>SET ROLE</>, permissions checking for SQL commands
   is carried out as though the named role were the one that had logged
   in originally.
  </para>
-->
<para>
这条命令将当前会话的当前用户标识为<replaceable class="parameter">role_name</replaceable>。
角色名可以写成表识符或者是字符串文本。在<command>SET ROLE</>之后，
SQL命令的权限检查就是针对这个用户了，就像当初用这个用户登录一样。 
</para>

  <!--
<para>
   The specified <replaceable class="parameter">role_name</replaceable>
   must be a role that the current session user is a member of.
   (If the session user is a superuser, any role can be selected.)
  </para>
-->
<para>
当前会话的用户必须是指定的<replaceable class="parameter">role_name</replaceable>
角色的成员。但超级用户可以选择任何角色。
</para>
  <!--
<para>
   The <literal>SESSION</> and <literal>LOCAL</> modifiers act the same
   as for the regular <xref linkend="SQL-SET">
   command.
  </para>
-->
<para>
<literal>SESSION</>和<literal>LOCAL</>修饰词的作用和普通的<xref linkend="SQL-SET">命令一样。
</para>

  <!--
<para>
   The <literal>NONE</> and <literal>RESET</> forms reset the current
   user identifier to be the current session user identifier.
   These forms can be executed by any user.
  </para>
-->
<para>
<literal>NONE</>和<literal>RESET</>形式重置当前用户标识为当前会话用户标识符。任何用户都可以执行这种形式。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   Using this command, it is possible to either add privileges or restrict
   one's privileges.  If the session user role has the <literal>INHERITS</>
   attribute, then it automatically has all the privileges of every role that
   it could <command>SET ROLE</> to; in this case <command>SET ROLE</>
   effectively drops all the privileges assigned directly to the session user
   and to the other roles it is a member of, leaving only the privileges
   available to the named role.  On the other hand, if the session user role
   has the <literal>NOINHERITS</> attribute, <command>SET ROLE</> drops the
   privileges assigned directly to the session user and instead acquires the
   privileges available to the named role.
  </para>
-->
<para>
使用这条命令，它可能会增加一个用户的权限，也可能会限制一个用户的权限。
如果会话用户的角色有<literal>INHERITS</>属性，那么它自动拥有它能<command>SET ROLE</>
变成的角色的所有权限；在这种情况下，<command>SET ROLE</>实际上是删除了所有直接赋予会话用户的权限，
以及它的所属角色的权限，只剩下指定角色的权限。另一方面，如果会话用户的角色有
<literal>NOINHERITS</>属性，<command>SET ROLE</>删除直接赋予会话用户的权限，而获取指定角色的权限。
</para>

  <!--
<para>
   In particular, when a superuser chooses to <command>SET ROLE</> to a
   non-superuser role, she loses her superuser privileges.
  </para>
-->
<para>
实际上，如果一个超级用户<command>SET ROLE</>为一个非超级用户，它会失去其超级用户权限。
</para>

  <!--
<para>
   <command>SET ROLE</> has effects comparable to
   <xref linkend="sql-set-session-authorization">, but the privilege
   checks involved are quite different.  Also,
   <command>SET SESSION AUTHORIZATION</> determines which roles are
   allowable for later <command>SET ROLE</> commands, whereas changing
   roles with <command>SET ROLE</> does not change the set of roles
   allowed to a later <command>SET ROLE</>.
  </para>
-->
<para>
<command>SET ROLE</>有和<xref linkend="sql-set-session-authorization">类似的效果，
但是其中涉及的权限检查有区别。还有，<command>SET SESSION AUTHORIZATION</>
决定其后有什么角色可以执行<command>SET ROLE</>命令，而用<command>SET ROLE</>
并不修改稍后的<command>SET ROLE</>可以设置的角色集。
</para>

  <!--
<para>
   <command>SET ROLE</> does not process session variables as specified by
   the role's <xref linkend="sql-alterrole"> settings;  this only happens during
   login.
  </para>
-->
<para>
<command>SET ROLE</>并不如同角色的<xref linkend="sql-alterrole">设置所声明的那样处理会话变量；
这只在登陆时发生。
</para>

  <!--
<para>
   <command>SET ROLE</> cannot be used within a
   <literal>SECURITY DEFINER</> function.
  </para>
-->
<para>
<command>SET ROLE</>不能在<literal>SECURITY DEFINER</>函数内使用。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

<programlisting>
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | peter

SET ROLE 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | paul
</programlisting>
 </refsect1>

 <refsect1>
  <!--
<title>Compatibility</title>
-->
<title>兼容性</title>

  <!--
<para>
   <productname>PostgreSQL</productname>
   allows identifier syntax (<literal>"rolename"</literal>), while
   the SQL standard requires the role name to be written as a string
   literal.  SQL does not allow this command during a transaction;
   <productname>PostgreSQL</productname> does not make this
   restriction because there is no reason to.
   The <literal>SESSION</> and <literal>LOCAL</> modifiers are a
   <productname>PostgreSQL</productname> extension, as is the
   <literal>RESET</> syntax.
  </para>
-->
<para>
<productname>PostgreSQL</productname>允许标识符语法(<literal>"rolename"</literal>)， 
而SQL标准要求角色名字写成字符串文本。 SQL并不允许在事务里面执行这条命令；
<productname>PostgreSQL</productname>并未做此限制，因为没有理由限制。
<literal>SESSION</>和<literal>LOCAL</>修饰词是<productname>PostgreSQL</productname>
的扩展，还有<literal>RESET</>语法也一样。 
</para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-session-authorization"></member>
  </simplelist>
 </refsect1>
</refentry>
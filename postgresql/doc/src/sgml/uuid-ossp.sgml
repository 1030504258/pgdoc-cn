<!-- doc/src/sgml/uuid-ossp.sgml -->

<sect1 id="uuid-ossp" xreflabel="uuid-ossp">
 <title>uuid-ossp</title>

 <indexterm zone="uuid-ossp">
  <primary>uuid-ossp</primary>
 </indexterm>

<!-- 
 <para>
  The <filename>uuid-ossp</> module provides functions to generate universally
  unique identifiers (UUIDs) using one of several standard algorithms.  There
  are also functions to produce certain special UUID constants.
 </para>
-->
 <para>
   <filename>uuid-ossp</>模块提供了一些函数用来生成通用唯一识别码(UUID)，
  它支持几种 UUID 产生的标准算法。同时它还提供了一些函数用来产生某些特定
  的UUID常量。
 </para>

<!-- 
 <para>
  This module depends on the OSSP UUID library, which can be found at
  <ulink url="http://www.ossp.org/pkg/lib/uuid/"></ulink>.
 </para>
-->
 <para>
   这个模块依赖于 OSSP UUID 库，
   <ulink url="http://www.ossp.org/pkg/lib/uuid/"></ulink>. 
 </para>

 <sect2>
<!-- 
  <title><literal>uuid-ossp</literal> Functions</title>
-->
 <title><literal>uuid-ossp</literal> 函数</title>

<!-- 
  <para>
   <xref linkend="uuid-ossp-functions"> shows the functions available to
   generate UUIDs.
   The relevant standards ITU-T Rec. X.667, ISO/IEC 9834-8:2005, and RFC
   4122 specify four algorithms for generating UUIDs, identified by the
   version numbers 1, 3, 4, and 5.  (There is no version 2 algorithm.)
   Each of these algorithms could be suitable for a different set of
   applications.
  </para>
-->
 <para>
   <xref linkend="uuid-ossp-functions"> 中的函数用来产生 UUID。
   相关标准 ITU-T Rec. X.667, ISO/IEC 9834-8:2005 和 RFC
   4122 定义了四种生成 UUID 的算法, 分别在版本
     1, 3, 4 和5中定义(没用版本2算法)每个算法适合于不同种类的应用使用。
  </para>

  <table id="uuid-ossp-functions">
<!-- 
   <title>Functions for UUID Generation</title>
-->
  <title>UUID 生成函数</title>
   <tgroup cols="2">
    <thead>
     <row>
<!-- 
      <entry>Function</entry>
      <entry>Description</entry>
-->
     <entry>函数</entry>
      <entry>描述</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>uuid_generate_v1()</function><indexterm><primary>uuid_generate_v1</primary></indexterm></entry>
      <entry>
<!-- 
       <para>
        This function generates a version 1 UUID.  This involves the MAC
        address of the computer and a time stamp.  Note that UUIDs of this
        kind reveal the identity of the computer that created the identifier
        and the time at which it did so, which might make it unsuitable for
        certain security-sensitive applications.
       </para>
-->
      <para>
  这个函数生成版本1的 UUID。它的算法使用了计算机的MAC地址和时间戳。注意这种
         UUID 泄露了生成它的计算机标识和生成它的时间，所以它可能不太适合对安全性要求较高的应用。
       </para>
      </entry>
     </row>
     <row>
      <entry><function>uuid_generate_v1mc()</function><indexterm><primary>uuid_generate_v1mc</primary></indexterm></entry>
      <entry>
<!-- 
       <para>
        This function generates a version 1 UUID but uses a random multicast
        MAC address instead of the real MAC address of the computer.
       </para>
-->
      <para>
  这个函数生成一个版本1的 UUID，但是使用一个随机多播 MAC
          地址而不是计算机的真实的 MAC 地址。
       </para>
      </entry>
     </row>
     <row>
      <entry><function>uuid_generate_v3(namespace uuid, name text)</function><indexterm><primary>uuid_generate_v3</primary></indexterm></entry>
      <entry>
<!-- 
       <para>
        This function generates a version 3 UUID in the given namespace using
        the specified input name.  The namespace should be one of the special
        constants produced by the <function>uuid_ns_*()</> functions shown
        in <xref linkend="uuid-ossp-constants">.  (It could be any UUID in theory.)  The name is an identifier
        in the selected namespace.
       </para>
-->
      <para>
  这个函数使用给定的输入名字(name)在给定的命名空间(namespace)
        中生成一个版本3的 UUID。给定的命名空间应该是调用表
        <xref linkend="uuid-ossp-constants"> 中的函数
        <function>uuid_ns_*()</>返回的常量。(理论上他可能是任何UUID)
        参数 name 是一个选定命名空间(namespace)中的标识符。
       </para>

       <para>
<!-- 
        For example:
-->
        例如:

<programlisting>
SELECT uuid_generate_v3(uuid_ns_url(), 'http://www.postgresql.org');
</programlisting>

<!-- 
        The name parameter will be MD5-hashed, so the cleartext cannot be
        derived from the generated UUID.
        The generation of UUIDs by this method has no random or
        environment-dependent element and is therefore reproducible.
-->
        参数 name会被使用 MD5 算法做哈希，所以从产生的 UUID 中不可能反向获得明文。
        利用这个方法生成的 UUID 不需要随机算法不依赖任何运行相关的环境因素，因此生成过程是可重复的。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_generate_v4()</literal></entry>
      <entry>
<!-- 
       <para>
        This function generates a version 4 UUID, which is derived entirely
        from random numbers.
       </para>
-->
      <para>
 这个函数生成一个版本4的 UUID，它完全依靠随机数。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_generate_v5(namespace uuid, name text)</literal></entry>
      <entry>
<!-- 
       <para>
        This function generates a version 5 UUID, which works like a version 3
        UUID except that SHA-1 is used as a hashing method.  Version 5 should
        be preferred over version 3 because SHA-1 is thought to be more secure
        than MD5.
       </para>
-->
      <para>
 这个函数生成一个版本5的 UUID，它个工作过程类似于版本3的
         UUID，但是它使用的 SHA-1 的哈希算法。因为 SHA-1 算法被认为比 MD5
         算法更安全，所有应该尽量使用版本 5 而不版本 3。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <table id="uuid-ossp-constants">
<!-- 
   <title>Functions Returning UUID Constants</title>
-->
   <title>返回 UUID 常量的函数</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry><literal>uuid_nil()</literal></entry>
      <entry>
<!-- 
       <para>
        A <quote>nil</> UUID constant, which does not occur as a real UUID.
       </para>
-->
      <para>
        一个 <quote>nil</> UUID 常量, 它不应该看作一个真正的 UUID。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_ns_dns()</literal></entry>
      <entry>
<!-- 
       <para>
        Constant designating the DNS namespace for UUIDs.
       </para>
-->
      <para>
 代表 DNS 命令空间的 UUID 常量。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_ns_url()</literal></entry>
      <entry>
<!-- 
       <para>
        Constant designating the URL namespace for UUIDs.
       </para>
-->
      <para>
  代表 URL 命名空间的 UUID 常量。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_ns_oid()</literal></entry>
      <entry>
<!-- 
       <para>
        Constant designating the ISO object identifier (OID) namespace for
        UUIDs.  (This pertains to ASN.1 OIDs, which are unrelated to the OIDs
        used in <productname>PostgreSQL</>.)
       </para>
-->
      <para>
 代表 ISO 对象标识符(OID)命名空间的 UUID 常量。(它是 ASN.1 的 OID，和 <productname>PostgreSQL</> 用的 OID 没有关系）。
       </para>
      </entry>
     </row>
     <row>
      <entry><literal>uuid_ns_x500()</literal></entry>
      <entry>
<!-- 
       <para>
        Constant designating the X.500 distinguished name (DN) namespace for
        UUIDs.
       </para>
-->
      <para>
  代表 X.500 识别名字(DN)命名空间的 UUID 常量
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect2>

 <sect2>
<!-- 
  <title>Author</title>
-->
 <title>作者</title>

  <para>
   Peter Eisentraut <email>peter_e@gmx.net</email>
  </para>

 </sect2>

</sect1>

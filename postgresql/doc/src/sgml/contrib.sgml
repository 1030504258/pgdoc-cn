<!-- doc/src/sgml/contrib.sgml -->

<appendix id="contrib">
<!--
 <title>Additional Supplied Modules</title>
-->
 <title>额外提供的模块</title> 
 <!--
<para>
  This appendix and the next one contain information regarding the modules that
  can be found in the <literal>contrib</literal> directory of the
  <productname>PostgreSQL</> distribution.
  These include porting tools, analysis utilities,
  and plug-in features that are not part of the core PostgreSQL system,
  mainly because they address a limited audience or are too experimental
  to be part of the main source tree.  This does not preclude their
  usefulness.
 </para>
-->
<para>
    本附录和下一个包含可以在<productname>PostgreSQL</>
发布的<literal>contrib</literal>目录中找到的模块信息。
这些包括移植工具，分析工具，和不是核心PostgreSQL系统部分的插件功能，
主要因为他们关注于有限的读者或者太实验而不是主要源码树的一部分。
这并不妨碍他们有效性。
</para>

 <!--
<para>
  This appendix covers extensions and other server plug-in modules found in
  <literal>contrib</literal>.  <xref linkend="contrib-prog"> covers utility
  programs.
 </para>
-->
<para>
   该附录包含扩展以及在<literal>contrib</literal>中发现的服务器插件模块。
   <xref linkend="contrib-prog">包含实用程序。
</para>

 
<para>
   <!--
  When building from the source distribution, these components are not built
  automatically, unless you build the "world" target
  (see <xref linkend="build">).
  You can build and install all of them by running:
  -->
  当从源码发布中编译时，
  这些组件不能自动创建，
  除非你建立"world"目标(参阅<xref linkend="build">)。
你可以通过运行下面命令创建和安装：
<screen>
<userinput>gmake</userinput>
<userinput>gmake install</userinput>
</screen>
   <!--
  in the <literal>contrib</literal> directory of a configured source tree;
  or to build and install
  just one selected module, do the same in that module's subdirectory.
  Many of the modules have regression tests, which can be executed by
  running:
  -->
  
  在配置的源码树的<literal>contrib</literal>目录中
或编译和安装一个选定的模块，在该模块的子目录做同样的事。
许多模块可以进行回归测试，可以通过运行下面命令被执行：
  
<screen>
<userinput>gmake check</userinput>
</screen>
  <!--
  before installation or
  -->
  在安装前或者
<screen>
<userinput>gmake installcheck</userinput>
</screen>
  <!--
  once you have a <productname>PostgreSQL</> server running.
  -->
  一旦你有正运行的<productname>PostgreSQL</>服务器。
 </para>

 <!--
<para>
  If you are using a pre-packaged version of <productname>PostgreSQL</>,
  these modules are typically made available as a separate subpackage,
  such as <literal>postgresql-contrib</>.
 </para>
-->
<para>
    如果您使用的是<productname>PostgreSQL</>的预包装版本，
这些模块通常可以作为一个单独的包，
如<literal>postgresql-contrib</>。
</para>


<para>
   <!--
  Many modules supply new user-defined functions, operators, or types.
  To make use of one of these modules, after you have installed the code
  you need to register the new SQL objects in the database system.
  In <productname>PostgreSQL</> 9.1 and later, this is done by executing
  a <xref linkend="sql-createextension"> command.  In a fresh database,
  you can simply do
  -->
  许多模块提供新的用户自定义函数，操作符，或类型。
为了利用其中一个模块，在你安装代码之后
你需要在数据库系统中注册新的SQL对象。
在<productname>PostgreSQL</> 9.1和以后版本，这是通过执行
<xref linkend="sql-createextension">命令来实现。在一个新的数据库中，
你可以简单地做

<programlisting>
CREATE EXTENSION <replaceable>module_name</>;
</programlisting>
  <!--
  This command must be run by a database superuser.  This registers the
  new SQL objects in the current database only, so you need to run this
  command in each database that you want
  the module's facilities to be available in.  Alternatively, run it in
  database <literal>template1</> so that the extension will be copied into
  subsequently-created databases by default.
  -->
  此命令必须由数据库管理员运行。这个
在当前数据库中注册新的SQL对象，
所以你需要在你想要该模
块的功能可用的每个数据库中运行这个
命令。另外，
在数据库<literal>template1</>中运行它，这样扩展将被复制到
缺省随后创建的数据库中。
  
  
 </para>

 <!--
<para>
  Many modules allow you to install their objects in a schema of your
  choice.  To do that, add <literal>SCHEMA
  <replaceable>schema_name</></literal> to the <command>CREATE EXTENSION</>
  command.  By default, the objects will be placed in your current creation
  target schema, typically <literal>public</>.
 </para>
-->
<para>
    许多模块允许你在你选择的模式中安装对象。
要做到这一点，添加<literal>SCHEMA
  <replaceable>schema_name</></literal>到<command>CREATE EXTENSION</>命令，
  默认情况下，该对象将被放置在当前创建的
目标模式中，通常<literal>public</>。
</para>

 
<para>
  <!--
  If your database was brought forward by dump and reload from a pre-9.1
  version of <productname>PostgreSQL</>, and you had been using the pre-9.1
  version of the module in it, you should instead do
  -->
  如果你的数据库通过转储提出，并且从<productname>PostgreSQL</>9.1之前版本恢复
，你在它的模块的先前9.1版本使用过，你应该替代做
  
<programlisting>
CREATE EXTENSION <replaceable>module_name</> FROM unpackaged;
</programlisting>
  <!--
  This will update the pre-9.1 objects of the module into a proper
  <firstterm>extension</> object.  Future updates to the module will be
  managed by <xref linkend="sql-alterextension">.
  For more information about extension updates, see
  <xref linkend="extend-extensions">.
  -->
  这将更新模块的9.1之前对象到一个适当的
 <firstterm>扩展</>对象。
通过<xref linkend="sql-alterextension">管理未来更新模块。
关于扩展更新的更多信息，参见<xref linkend="extend-extensions">。
 </para>

 <!--
<para>
  Note, however, that some of these modules are not <quote>extensions</quote>
  in this sense, but are loaded into the server in some other way, for instance
  by way of
  <xref linkend="guc-shared-preload-libraries">.  See the documentation of each
  module for details.
 </para>
-->
<para>
   注意，然而，这些模块在这个意义上不是<quote>扩展</quote>，
   但在一些其他的方式中被加载到服务器，比如
通过
<xref linkend="guc-shared-preload-libraries">。
参见每个模块的文档获取更多信息。
</para>

 &adminpack;
 &auth-delay;
 &auto-explain;
 &btree-gin;
 &btree-gist;
 &chkpass;
 &citext;
 &cube;
 &dblink;
 &dict-int;
 &dict-xsyn;
 &dummy-seclabel;
 &earthdistance;
 &file-fdw;
 &fuzzystrmatch;
 &hstore;
 &intagg;
 &intarray;
 &isn;
 &lo;
 &ltree;
 &pageinspect;
 &passwordcheck;
 &pgbuffercache;
 &pgcrypto;
 &pgfreespacemap;
 &pgrowlocks;
 &pgstatstatements;
 &pgstattuple;
 &pgtrgm;
 &postgres-fdw;
 &seg;
 &sepgsql;
 &contrib-spi;
 &sslinfo;
 &tablefunc;
 &tcn;
 &test-parser;
 &tsearch2;
 &unaccent;
 &uuid-ossp;
 &xml2;

</appendix>

<!--
These are two separate appendixes because it is difficult to mix regular
sections (for extensions) and refentries (for programs) in one chapter or
appendix.  And we do want the programs as refentries so that we can produce man
pages.
-->

<appendix id="contrib-prog">
<!--
 <title>Additional Supplied Programs</title>
-->
  <title>额外提供的程序</title>

 <!--
<para>
  This appendix and the previous one contain information regarding the modules that
  can be found in the <literal>contrib</literal> directory of the
  <productname>PostgreSQL</> distribution.  See <xref linkend="contrib"> for
  more information about the <literal>contrib</literal> section in general and
  server extensions and plug-ins found in <literal>contrib</literal>
  specifically.
 </para>
-->
<para>
   本附录和前一个包含
可以在<productname>PostgreSQL</>发布的<literal>contrib</literal>目录中发现
的有关模块的信息。
参阅<xref linkend="contrib">获取更多关于<literal>contrib</literal>部分和
服务器扩展以及特别在<literal>contrib</literal>中发现的插件的更多详细信息。

</para>

 <!--
<para>
  This appendix covers utility programs found in <literal>contrib</literal>.
  Once installed, either from source or a packaging system, they are found in
  the <filename>bin</filename> directory of the
  <productname>PostgreSQL</productname> installation and can be used like any
  other program.
 </para>
-->
<para>
   本附录包括在<literal>contrib</literal>中发现的实用程序。
一旦安装，无论来自源或包装系统，
它们在<productname>PostgreSQL</productname>安装的<filename>bin</filename>目录中被发现
可用于类似的任何其他程序。
</para>

 <sect1 id="contrib-prog-client">
 <!--
  <title>Client Applications</title>
 -->
   <title>客户端应用程序</title>
  <!--
<para>
   This section covers <productname>PostgreSQL</productname> client
   applications in <literal>contrib</literal>.  They can be run from anywhere,
   independent of where the database server resides.  See
   also <xref linkend="reference-client"> for information about client
   applications that part of the core <productname>PostgreSQL</productname>
   distribution.
  </para>
-->
<para>
    这部分在<literal>contrib</literal>中
包含<productname>PostgreSQL</productname>客户端
应用程序。它们可以从任何地方允许，
数据库服务器独立的地方。参阅<xref linkend="reference-client">获取
关于核心<productname>PostgreSQL</productname>发布
部分客户端应用程序的信息。
</para>

 &oid2name;
 &pgbench;
 &vacuumlo;
 </sect1>

 <sect1 id="contrib-prog-server">
 <!--
  <title>Server Applications</title>
  -->
   <title>服务器端应用程序</title>

  <!--
<para>
   This section covers <productname>PostgreSQL</productname> server-related
   applications in <literal>contrib</literal>.  They are typically run on the
   host where the database server resides.  See also <xref
   linkend="reference-server"> for information about server applications that
   part of the core <productname>PostgreSQL</productname> distribution.
  </para>
-->
<para>
   这部分在<literal>contrib</literal>中
包含<productname>PostgreSQL</productname>服务器相关
应用程序。它们通常运行在数据库服务器存在的主机上。参阅
<xref linkend="reference-server">获取
关于核心<productname>PostgreSQL</productname>发布
部分服务器端应用程序的信息。
</para>

 &pgarchivecleanup;
 &pgstandby;
 &pgtestfsync;
 &pgtesttiming;
 &pgupgrade;
 &pgxlogdump;
 </sect1>
</appendix>

<!-- doc/src/sgml/contrib.sgml -->

<appendix id="contrib">
<!--==========================orignal english content==========================
 <title>Additional Supplied Modules</title>
____________________________________________________________________________-->
 <title>额外提供的模块</title>

<!--==========================orignal english content==========================
 <para>
  This appendix and the next one contain information regarding the modules that
  can be found in the <literal>contrib</literal> directory of the
  <productname>PostgreSQL</productname> distribution.
  These include porting tools, analysis utilities,
  and plug-in features that are not part of the core PostgreSQL system,
  mainly because they address a limited audience or are too experimental
  to be part of the main source tree.  This does not preclude their
  usefulness.
 </para>
____________________________________________________________________________-->
 <para>
  这个附录和下一个附录介绍在<productname>PostgreSQL</productname>发布的<literal>contrib</literal>目录中能找到的模块。包括移植工具、分析工具和插件特性，它们不是 PostgreSQL 核心系统的一部分，主要因为只有很少的用户会用到或者是还处于实验阶段。但这不会影响它们的使用。
 </para>

<!--==========================orignal english content==========================
 <para>
  This appendix covers extensions and other server plug-in modules found in
  <literal>contrib</literal>.  <xref linkend="contrib-prog"/> covers utility
  programs.
 </para>
____________________________________________________________________________-->
 <para>
  这个附录覆盖了在<literal>contrib</literal>中能找到的扩展和其他服务器插件模块。<xref linkend="contrib-prog"/>覆盖了工具程序。
 </para>

<!--==========================orignal english content==========================
 <para>
  When building from the source distribution, these components are not built
  automatically, unless you build the "world" target
  (see <xref linkend="build"/>).
  You can build and install all of them by running:
<screen>
<userinput>make</userinput>
<userinput>make install</userinput>
</screen>
  in the <literal>contrib</literal> directory of a configured source tree;
  or to build and install
  just one selected module, do the same in that module's subdirectory.
  Many of the modules have regression tests, which can be executed by
  running:
<screen>
<userinput>make check</userinput>
</screen>
  before installation or
<screen>
<userinput>make installcheck</userinput>
</screen>
  once you have a <productname>PostgreSQL</productname> server running.
 </para>
____________________________________________________________________________-->
 <para>
  当从源码发布包编译时，这些组件不会自动被编译，除非编译了“world”目标（见<xref linkend="build"/>）。 可以在已配置的源代码树中的<literal>contrib</literal>路径下，通过下面的命令编译安装：
<screen>
<userinput>make</userinput>
<userinput>make install</userinput>
</screen>
  或者只在选中模块的子目录下编译和安装。许多模块都有回归测试，可以通过下面的命令在安装之前运行测试：
<screen>
<userinput>make check</userinput>
</screen>
  在安装之前或
<screen>
<userinput>make installcheck</userinput>
</screen>
  一旦你有一个<productname>PostgreSQL</productname>服务器正在运行。
 </para>

<!--==========================orignal english content==========================
 <para>
  If you are using a pre-packaged version of <productname>PostgreSQL</productname>,
  these modules are typically made available as a separate subpackage,
  such as <literal>postgresql-contrib</literal>.
 </para>
____________________________________________________________________________-->
 <para>
  如果是用的是预打包版的<productname>PostgreSQL</productname>，这些模块通常可以作为一个单独的子包来获得， 如<literal>postgresql-contrib</literal>。
 </para>

<!--==========================orignal english content==========================
 <para>
  Many modules supply new user-defined functions, operators, or types.
  To make use of one of these modules, after you have installed the code
  you need to register the new SQL objects in the database system.
  This is done by executing
  a <xref linkend="sql-createextension"/> command.  In a fresh database,
  you can simply do

<programlisting>
CREATE EXTENSION <replaceable>module_name</replaceable>;
</programlisting>

  This command registers the new SQL objects in the current database only,
  so you need to run it in each database that you want
  the module's facilities to be available in.  Alternatively, run it in
  database <literal>template1</literal> so that the extension will be copied into
  subsequently-created databases by default.
 </para>
____________________________________________________________________________-->
 <para>
  许多模块提供新的用户自定义函数、操作符或数据类型。在已经安装了代码之后，为了使用这些模块，需要在数据库系统中注册新的 SQL 对象。
  可以通过执行一个<xref linkend="sql-createextension"/>命令来完成。在一个新的数据库中，你可以简单地

<programlisting>
CREATE EXTENSION <replaceable>module_name</replaceable>;
</programlisting>

  这个命令把新的 SQL 对象注册在当前数据库中，因此你需要在每一个你希望使用该模块功能的数据库中执行他。
  另外，可以在<literal>template1</literal>数据库中运行这个命令以便该扩展能被默认地复制到后续创建的数据库中。
 </para>

<!--==========================orignal english content==========================
 <para>
  For all these modules, <command>CREATE EXTENSION</command> must be run
  by a database superuser, unless the module is
  considered <quote>trusted</quote>, in which case it can be run by any
  user who has <literal>CREATE</literal> privilege on the current
  database.  Modules that are trusted are identified as such in the
  sections that follow.  Generally, trusted modules are ones that cannot
  provide access to outside-the-database functionality.
 </para>
____________________________________________________________________________-->
 <para>
  对于所有这些模块，<command>CREATE EXTENSION</command>必须由数据库超级用户运行，除非该模块被视为<quote>trusted</quote>，
  在这种情况下，它可以由在当前数据库上具有<literal>CREATE</literal>特权的任何用户运行。 
  受信任的模块将在下面的章节中标识为这样的模块。通常，受信任的模块不能提供对数据库外部函数的访问。
 </para>

<!--==========================orignal english content==========================
 <para>
  Many modules allow you to install their objects in a schema of your
  choice.  To do that, add <literal>SCHEMA
  <replaceable>schema_name</replaceable></literal> to the <command>CREATE EXTENSION</command>
  command.  By default, the objects will be placed in your current creation
  target schema, which in turn defaults to <literal>public</literal>.
 </para>
____________________________________________________________________________-->
 <para>
  很多模块允许你将它们的对象安装在你选择的一个模式中。要这样做，需要将<literal>SCHEMA <replaceable>schema_name</replaceable></literal>加入到<command>CREATE EXTENSION</command>命令中。默认情况下，这些对象将被放置在你的当前创建目标模式中，通常是<literal>public</literal>。
 </para>

<!--==========================orignal english content==========================
 <para>
  Note, however, that some of these modules are not <quote>extensions</quote>
  in this sense, but are loaded into the server in some other way, for instance
  by way of
  <xref linkend="guc-shared-preload-libraries"/>.  See the documentation of each
  module for details.
 </para>
____________________________________________________________________________-->
 <para>
  不过注意，有一些这样的模块不是这种意义上的<quote>扩展</quote>，而是以某种其他方式被载入到服务器，例如使用<xref linkend="guc-shared-preload-libraries"/>方式。每个模块详见其文档。
 </para>

 &adminpack;
 &amcheck;
 &auth-delay;
 &auto-explain;
 &bloom;
 &btree-gin;
 &btree-gist;
 &citext;
 &cube;
 &dblink;
 &dict-int;
 &dict-xsyn;
 &earthdistance;
 &file-fdw;
 &fuzzystrmatch;
 &hstore;
 &intagg;
 &intarray;
 &isn;
 &lo;
 &ltree;
 &oldsnapshot;
 &pageinspect;
 &passwordcheck;
 &pgbuffercache;
 &pgcrypto;
 &pgfreespacemap;
 &pgprewarm;
 &pgrowlocks;
 &pgstatstatements;
 &pgstattuple;
 &pgsurgery;
 &pgtrgm;
 &pgvisibility;
 &postgres-fdw;
 &seg;
 &sepgsql;
 &contrib-spi;
 &sslinfo;
 &tablefunc;
 &tcn;
 &test-decoding;
 &tsm-system-rows;
 &tsm-system-time;
 &unaccent;
 &uuid-ossp;
 &xml2;

</appendix>

<!--
These are two separate appendixes because it is difficult to mix regular
sections (for extensions) and refentries (for programs) in one chapter or
appendix.  And we do want the programs as refentries so that we can produce man
pages.
-->

<appendix id="contrib-prog">
<!--==========================orignal english content==========================
 <title>Additional Supplied Programs</title>
____________________________________________________________________________-->
 <title>额外提供的程序</title>

<!--==========================orignal english content==========================
 <para>
  This appendix and the previous one contain information regarding the modules that
  can be found in the <literal>contrib</literal> directory of the
  <productname>PostgreSQL</productname> distribution.  See <xref linkend="contrib"/> for
  more information about the <literal>contrib</literal> section in general and
  server extensions and plug-ins found in <literal>contrib</literal>
  specifically.
 </para>
____________________________________________________________________________-->
 <para>
  这个附录及之前的一个包含了在<productname>PostgreSQL</productname>发布的<literal>contrib</literal>目录中可以找到的模块的信息。在<xref linkend="contrib"/>中有更多关于<literal>contrib</literal>小节的总体信息，以及<literal>contrib</literal>中的服务器扩展和插件的详细信息。
 </para>

<!--==========================orignal english content==========================
 <para>
  This appendix covers utility programs found in <literal>contrib</literal>.
  Once installed, either from source or a packaging system, they are found in
  the <filename>bin</filename> directory of the
  <productname>PostgreSQL</productname> installation and can be used like any
  other program.
 </para>
____________________________________________________________________________-->
 <para>
  这个附录覆盖了<literal>contrib</literal>中能找到的功能程序。一旦被安装（不管是从源代码安装还是从包系统安装），它们就可以在<productname>PostgreSQL</productname>安装的<filename>bin</filename>目录中找到，并且能够和任何其他程序一样使用。
 </para>

 <sect1 id="contrib-prog-client">
<!--==========================orignal english content==========================
  <title>Client Applications</title>
____________________________________________________________________________-->
  <title>客户端应用</title>

<!--==========================orignal english content==========================
  <para>
   This section covers <productname>PostgreSQL</productname> client
   applications in <literal>contrib</literal>.  They can be run from anywhere,
   independent of where the database server resides.  See
   also <xref linkend="reference-client"/> for information about client
   applications that are part of the core <productname>PostgreSQL</productname>
   distribution.
  </para>
____________________________________________________________________________-->
  <para>
   这一节覆盖了<literal>contrib</literal>中的<productname>PostgreSQL</productname>客户端应用。它们可以从任何位置运行，不管数据库服务器运行在哪里。核心<productname>PostgreSQL</productname>发布中的客户端应用也可见<xref linkend="reference-client"/>。
  </para>

 &oid2name;
 &vacuumlo;
 </sect1>

 <sect1 id="contrib-prog-server">
<!--==========================orignal english content==========================
  <title>Server Applications</title>
____________________________________________________________________________-->
  <title>服务器应用</title>

<!--==========================orignal english content==========================
  <para>
   Some applications run on the <productname>PostgreSQL</productname> server
   itself.  Currently, no such applications are included in the
   <literal>contrib</literal> directory.  See also <xref
   linkend="reference-server"/> for information about server applications that
   are part of the core <productname>PostgreSQL</productname> distribution.
  </para>
____________________________________________________________________________-->
  <para>
   某些应用程序在<productname>PostgreSQL</productname>服务器上运行。 目前，<literal>contrib</literal>目录中不包含此类应用程序。
   请参阅 <xref linkend="reference-server"/> 以获取有关作为核心 <productname>PostgreSQL</productname> 发行版一部分的服务器应用程序的信息。
  </para>

 </sect1>
</appendix>

<!-- doc/src/sgml/chkpass.sgml -->

<sect1 id="chkpass" xreflabel="chkpass">
 <title>chkpass</title>

 <indexterm zone="chkpass">
  <primary>chkpass</primary> 
 </indexterm>

 <!--
<para>
  This module implements a data type <type>chkpass</> that is
  designed for storing encrypted passwords.
  Each password is automatically converted to encrypted form upon entry,
  and is always stored encrypted.  To compare, simply compare against a clear
  text password and the comparison function will encrypt it before comparing.
 </para>
-->
<para>
   该模块实现用于存储加密密码的数据类型<type>chkpass</>。
   每个密码自动转换为加密进入，并且总是存储加密的。
   为了比较，简单比较清晰的文本密码，并且在比较之前比较函数将对它加密。
</para>

 <!--
<para>
  There are provisions in the code to report an error if the password is
  determined to be easily crackable.  However, this is currently just
  a stub that does nothing.
 </para>
-->
<para>
   如果密码容易被破解，那么代码中有规定可以报告错误。
   然而，目前只是stub，什么都不做。
</para>

 <!--
<para>
  If you precede an input string with a colon, it is assumed to be an
  already-encrypted password, and is stored without further encryption.
  This allows entry of previously-encrypted passwords.
 </para>
-->
<para>
   如果输入字符串前面加冒号，
   它被认为是一个已加密密码，没有进一步加密存储。
   这允许先前加密密码进入。
</para>

 <!--
<para> 
  On output, a colon is prepended.  This makes it possible to dump and reload
  passwords without re-encrypting them.  If you want the encrypted password
  without the colon then use the <function>raw()</> function.
  This allows you to use the
  type with things like Apache's <literal>Auth_PostgreSQL</> module.
 </para>
-->
<para>
   在输出上，冒号在前。这可能备份并且重载没有重新加密的密码。
   如果你想要不带冒号的加密密码，那么使用<function>raw()</>函数。
   这允许你使用带有类似Apache的<literal>Auth_PostgreSQL</>模块的类型。
</para>

 <!--
<para>
  The encryption uses the standard Unix function <function>crypt()</>,
  and so it suffers
  from all the usual limitations of that function; notably that only the
  first eight characters of a password are considered.
 </para>
-->
<para>
   加密使用标准的Unix函数<function>crypt()</>，
所以它会遭受该函数所有常见局限性；
值得注意的是，只考虑前八个字符的密码。
</para>

 
<para>

  <!--
  Note that the <type>chkpass</type> data type is not indexable.
  -->
  注意<type>chkpass</type>数据类型是不可索引的。
  
  <!--
  I haven't worried about making this type indexable.  I doubt that anyone
  would ever need to sort a file in order of encrypted password.
  -->
 </para>


 <!--
<para>
  Sample usage:
 </para>
-->
<para>
   示例用法：
</para>

<programlisting>
test=# create table test (p chkpass);
CREATE TABLE
test=# insert into test values ('hello');
INSERT 0 1
test=# select * from test;
       p
----------------
 :dVGkpXdOrE3ko
(1 row)

test=# select raw(p) from test;
      raw
---------------
 dVGkpXdOrE3ko
(1 row)

test=# select p = 'hello' from test;
 ?column?
----------
 t
(1 row)

test=# select p = 'goodbye' from test;
 ?column?
----------
 f
(1 row)
</programlisting>

 <sect2>
 <!--
  <title>Author</title>
-->
  <title>作者</title>
  
<para>
   D'Arcy J.M. Cain (<email>darcy@druid.net</email>)
  </para>

 </sect2>

</sect1>

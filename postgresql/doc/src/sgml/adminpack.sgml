<!-- doc/src/sgml/adminpack.sgml -->

<sect1 id="adminpack" xreflabel="adminpack">
<!--==========================orignal english content==========================
 <title>adminpack</title>
____________________________________________________________________________-->
 <title>adminpack</title>

<!--==========================orignal english content==========================
 <indexterm zone="adminpack">
  <primary>adminpack</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="adminpack">
  <primary>adminpack</primary>
 </indexterm>

<!--==========================orignal english content==========================
 <para>
  <filename>adminpack</filename> provides a number of support functions which
  <application>pgAdmin</application> and other administration and management tools can
  use to provide additional functionality, such as remote management
  of server log files.
  Use of all these functions is only allowed to the superuser by default but may be
  allowed to other users by using the <command>GRANT</command> command.
 </para>
____________________________________________________________________________-->
 <para>
  <filename>adminpack</filename> 提供了一些支持函数，<application>pgAdmin</application> 和其他管理工具会用这些函数来提供额外的功能，例如服务器日志文件的远程管理。所有这些函数默认只允许由超级用户使用，但是可以通过使用 <command>GRANT</command> 命令允许其他用户使用。
 </para>

<!--==========================orignal english content==========================
 <para>
  The functions shown in <xref linkend="functions-adminpack-table"/> provide
  write access to files on the machine hosting the server.  (See also the
  functions in <xref linkend="functions-admin-genfile-table"/>, which
  provide read-only access.)
  Only files within the database cluster directory can be accessed, unless the
  user is a superuser or given one of the pg_read_server_files, or pg_write_server_files
  roles, as appropriate for the function, but either a relative or absolute path is
  allowable.
 </para>
____________________________________________________________________________-->
 <para>
  <xref linkend="functions-adminpack-table"/>中展示的函数提供了向运行
  着服务器的机器上的文件进行写入的途径（另见
  <xref linkend="functions-admin-genfile-table"/>中的函数，它们提供了
  只读的访问途径）。对于这些函数，只有位于数据库集簇目录中的文件才能被访问（除非用户是一个超级用户或者被指定了 pg_read_server_files 或者 pg_write_server_files 角色之一），不过允许使用相对路径和绝对路径。
 </para>

 <table id="functions-adminpack-table">
<!--==========================orignal english content==========================
  <title><filename>adminpack</filename> Functions</title>
____________________________________________________________________________-->
  <title><filename>adminpack</filename> Functions</title>
    <tgroup cols="1">
     <thead>
<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        Function
       </para>
       <para>
        Description
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        函数
       </para>
       <para>
        描述
       </para></entry>
      </row>
     </thead>

     <tbody>
<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_write</function> ( <parameter>filename</parameter> <type>text</type>, <parameter>data</parameter> <type>text</type>, <parameter>append</parameter> <type>boolean</type> )
        <returnvalue>bigint</returnvalue>
       </para>
       <para>
        Writes, or appends to, a text file.
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_write</function> ( <parameter>filename</parameter> <type>text</type>, <parameter>data</parameter> <type>text</type>, <parameter>append</parameter> <type>boolean</type> )
        <returnvalue>bigint</returnvalue>
       </para>
       <para>
        写入或追加到一个文本文件.
       </para></entry>
      </row>

<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_sync</function> ( <parameter>filename</parameter> <type>text</type> )
        <returnvalue>void</returnvalue>
       </para>
       <para>
        Flushes a file or directory to disk.
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_sync</function> ( <parameter>filename</parameter> <type>text</type> )
        <returnvalue>void</returnvalue>
       </para>
       <para>
        刷新一个文件或目录到硬盘。
       </para></entry>
      </row>

<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_rename</function> ( <parameter>oldname</parameter> <type>text</type>, <parameter>newname</parameter> <type>text</type> <optional>, <parameter>archivename</parameter> <type>text</type> </optional> )
        <returnvalue>boolean</returnvalue>
       </para>
       <para>
        Renames a file.
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_rename</function> ( <parameter>oldname</parameter> <type>text</type>, <parameter>newname</parameter> <type>text</type> <optional>, <parameter>archivename</parameter> <type>text</type> </optional> )
        <returnvalue>boolean</returnvalue>
       </para>
       <para>
        重命名一个文件。
       </para></entry>
      </row>

<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_unlink</function> ( <parameter>filename</parameter> <type>text</type> )
        <returnvalue>boolean</returnvalue>
       </para>
       <para>
        Removes a file.
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_file_unlink</function> ( <parameter>filename</parameter> <type>text</type> )
        <returnvalue>boolean</returnvalue>
       </para>
       <para>
        移除一个文件。
       </para></entry>
      </row>

<!--==========================orignal english content==========================
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_logdir_ls</function> ()
        <returnvalue>setof record</returnvalue>
       </para>
       <para>
        Lists the log files in the <varname>log_directory</varname> directory.
       </para></entry>
      </row>
____________________________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <function>pg_catalog.pg_logdir_ls</function> ()
        <returnvalue>setof record</returnvalue>
       </para>
       <para>
        列出<varname>log_directory</varname> 目录中的日志文件。
       </para></entry>
      </row>
     </tbody>
  </tgroup>
 </table>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_file_write</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_file_write</primary>
 </indexterm>
<!--==========================orignal english content==========================
 <para>
  <function>pg_file_write</function> writes the specified <parameter>data</parameter> into
  the file named by <parameter>filename</parameter>.  If <parameter>append</parameter> is
  false, the file must not already exist.  If <parameter>append</parameter> is true,
  the file can already exist, and will be appended to if so.
  Returns the number of bytes written.
 </para>
____________________________________________________________________________-->
 <para>
  <function>pg_file_write</function> 把指定的 <parameter>data</parameter> 写入到由 <parameter>filename</parameter> 命名的文件中。如果 <parameter>append</parameter> 为假，文件不能已经存在。如果 <parameter>append</parameter> 为真，该文件
  可能已经存在，并且如果存在就会被追加。这个函数返回写入的字节数。
 </para>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_file_sync</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_file_sync</primary>
 </indexterm>
<!--==========================orignal english content==========================
 <para>
  <function>pg_file_sync</function> fsyncs the specified file or directory
  named by <parameter>filename</parameter>.  An error is thrown
  on failure (e.g., the specified file is not present). Note that
  <xref linkend="guc-data-sync-retry"/> has no effect on this function,
  and therefore a PANIC-level error will not be raised even on failure to
  flush database files.
 </para>
____________________________________________________________________________-->
 <para>
  <function>pg_file_sync</function> fsyncs由<parameter>filename</parameter>命名的指定的文件或目录。
  在失败时会出现错误 (例如：指定的文件不存在)。
  注意 <xref linkend="guc-data-sync-retry"/> 对此函数没有影响,因此在刷新数据库文件失败的时候不会引发PANIC-级别的错误。
 </para>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_file_rename</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_file_rename</primary>
 </indexterm>
<!--==========================orignal english content==========================
 <para>
  <function>pg_file_rename</function> renames a file.  If <parameter>archivename</parameter>
  is omitted or NULL, it simply renames <parameter>oldname</parameter>
  to <parameter>newname</parameter> (which must not already exist).
  If <parameter>archivename</parameter> is provided, it first
  renames <parameter>newname</parameter> to <parameter>archivename</parameter> (which must
  not already exist), and then renames <parameter>oldname</parameter>
  to <parameter>newname</parameter>.  In event of failure of the second rename step,
  it will try to rename <parameter>archivename</parameter> back
  to <parameter>newname</parameter> before reporting the error.
  Returns true on success, false if the source file(s) are not present or
  not writable; other cases throw errors.
 </para>
____________________________________________________________________________-->
 <para>
  <function>pg_file_rename</function>重命名一个文件。如果
  <parameter>archivename</parameter>被省略或者为 NULL，它简单地把
  <parameter>oldname</parameter>重命名为<parameter>newname</parameter>（不能
  已经存在）。如果提供了<parameter>archivename</parameter>，该函数首先把
  <parameter>newname</parameter>重命名为<parameter>archivename</parameter>（不
  能已经存在），然后把<parameter>oldname</parameter>重命名为
  <parameter>newname</parameter>。当第二次重命名失败时，这个函数会在报告
  错误之前尝试把<parameter>archivename</parameter>重命名成
  <parameter>newname</parameter>。成功时函数返回真，如果源文件不存在或者
  不可写则返回假，其他情况下会抛出错误。
 </para>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_file_unlink</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_file_unlink</primary>
 </indexterm>
<!--==========================orignal english content==========================
 <para>
  <function>pg_file_unlink</function> removes the specified file.
  Returns true on success, false if the specified file is not present
  or the <function>unlink()</function> call fails; other cases throw errors.
 </para>
____________________________________________________________________________-->
 <para>
  <function>pg_file_unlink</function>移除指定的文件。成功时函数返回真，
  如果指定的文件不存在或者<function>unlink()</function>调用失败则返回
  假，其他情况下会抛出错误。
 </para>

<!--==========================orignal english content==========================
 <indexterm>
  <primary>pg_logdir_ls</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm>
  <primary>pg_logdir_ls</primary>
 </indexterm>
<!--==========================orignal english content==========================
 <para>
  <function>pg_logdir_ls</function> returns the start timestamps and path
  names of all the log files in the <xref linkend="guc-log-directory"/>
  directory.  The <xref linkend="guc-log-filename"/> parameter must have its
  default setting (<literal>postgresql-%Y-%m-%d_%H%M%S.log</literal>) to use this
  function.
 </para>
____________________________________________________________________________-->
 <para>
  <function>pg_logdir_ls</function>返回<xref linkend="guc-log-directory"/>
  目录中所有日志文件的开始时间戳以及路径名。要使用这个函数，
  <xref linkend="guc-log-filename"/>参数必须具有其默认设置（
  <literal>postgresql-%Y-%m-%d_%H%M%S.log</literal>）。
 </para>

</sect1>

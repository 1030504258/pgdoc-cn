<!-- doc/src/sgml/limits.sgml -->

<appendix id="limits">
<!--==========================orignal english content==========================
 <title><productname>PostgreSQL</productname> Limits</title>
____________________________________________________________________________-->
 <title><productname>PostgreSQL</productname>限制</title>

<!--==========================orignal english content==========================
 <para>
  <xref linkend="limits-table"/> describes various hard limits of
  <productname>PostgreSQL</productname>.  However, practical limits, such as
  performance limitations or available disk space may apply before absolute
  hard limits are reached.
 </para>
____________________________________________________________________________-->
 <para>
  <xref linkend="limits-table"/>描述了<productname>PostgreSQL</productname>的各种硬性限制。
  但是，在达到绝对硬限制之前，可能会先受到现实的限制，例如性能限制或可用磁盘空间。
 </para>

 <table id="limits-table">
<!--==========================orignal english content==========================
  <title><productname>PostgreSQL</productname> Limitations</title>
____________________________________________________________________________-->
  <title><productname>PostgreSQL</productname>限制</title>
  <tgroup cols="3">
   <thead>
<!--==========================orignal english content==========================
    <row>
     <entry>Item</entry>
     <entry>Upper Limit</entry>
     <entry>Comment</entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>项目</entry>
     <entry>上限值</entry>
     <entry>说明</entry>
    </row>
   </thead>

   <tbody>
<!--==========================orignal english content==========================
    <row>
     <entry>database size</entry>
     <entry>unlimited</entry>
     <entry></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>数据库大小</entry>
     <entry>不限</entry>
     <entry></entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>number of databases</entry>
     <!-&minus; 2^32 - FirstNormalObjectId - 1 -&minus;>
     <entry>4,294,950,911</entry>
     <entry></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>数据库数量</entry>
     <!-- 2^32 - FirstNormalObjectId - 1 -->
     <entry>4,294,950,911</entry>
     <entry></entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>relations per database</entry>
     <!-&minus; (2^32 - FirstNormalObjectId - 1) / 3 (3 because of the table and the
          two types that are created to go with it) -&minus;>
     <entry>1,431,650,303</entry>
     <entry></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>每个数据库的关系数量</entry>
     <!-- (2^32 - FirstNormalObjectId - 1) / 3 (3 because of the table and the
          two types that are created to go with it) -->
     <entry>1,431,650,303</entry>
     <entry></entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>relation size</entry>
     <entry>32 TB</entry>
     <entry>with the default <symbol>BLCKSZ</symbol> of 8192 bytes</entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>关系大小</entry>
     <entry>32 TB</entry>
     <entry>基于<symbol>BLCKSZ</symbol>为缺省的8192字节</entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>rows per table</entry>
     <entry>limited by the number of tuples that can fit onto 4,294,967,295 pages</entry>
     <entry></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>每个表的记录数</entry>
     <entry>受限于可以放到4,294,967,295个页中的元组数</entry>
     <entry></entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>columns per table</entry>
     <entry>1600</entry>
     <entry>further limited by tuple size fitting on a single page; see note
     below</entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>每个表的列数</entry>
     <entry>1600</entry>
     <entry>同时受限于元组大小，需要能放到单个页中; 参考下面的说明</entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>field size</entry>
     <entry>1 GB</entry>
     <entry></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>字段大小</entry>
     <entry>1 GB</entry>
     <entry></entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>identifier length</entry>
     <entry>63 bytes</entry>
     <entry>can be increased by recompiling <productname>PostgreSQL</productname></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>标识符长度</entry>
     <entry>63字节</entry>
     <entry>可以通过重新编译<productname>PostgreSQL</productname>增大</entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>indexes per table</entry>
     <entry>unlimited</entry>
     <entry>constrained by maximum relations per database</entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>每个表的索引数</entry>
     <entry>不限</entry>
     <entry>受每个数据库最大关系数的约束</entry>
    </row>

<!--==========================orignal english content==========================
    <row>
     <entry>columns per index</entry>
     <entry>32</entry>
     <entry>can be increased by recompiling <productname>PostgreSQL</productname></entry>
    </row>
____________________________________________________________________________-->
    <row>
     <entry>每个索引的列数</entry>
     <entry>32</entry>
     <entry>可以通过重新编译<productname>PostgreSQL</productname>增大</entry>
    </row>

<!--==========================orignal english content==========================
   <row>
    <entry>partition keys</entry>
    <entry>32</entry>
    <entry>can be increased by recompiling <productname>PostgreSQL</productname></entry>
   </row>
____________________________________________________________________________-->
   <row>
    <entry>分区键数量</entry>
    <entry>32</entry>
    <entry>可以通过重新编译<productname>PostgreSQL</productname>增大</entry>
   </row>
   </tbody>
  </tgroup>
 </table>

<!--==========================orignal english content==========================
 <para>
  The maximum number of columns for a table is further reduced as the tuple
  being stored must fit in a single 8192-byte heap page.  For example,
  excluding the tuple header, a tuple made up of 1600 <type>int</type> columns
  would consume 6400 bytes and could be stored in a heap page, but a tuple of
  1600 <type>bigint</type> columns would consume 12800 bytes and would
  therefore not fit inside a heap page.
  Variable-length fields of
  types such as <type>text</type>, <type>varchar</type>, and <type>char</type>
  can have their values stored out of line in the table's TOAST table when the
  values are large enough to require it.  Only an 18-byte pointer must remain
  inside the tuple in the table's heap.  For shorter length variable-length
  fields, either a 4-byte or 1-byte field header is used and the value is
  stored inside the heap tuple.
 </para>
____________________________________________________________________________-->
 <para>  
  由于要存储的元组必须适合单个8192字节的堆页面，因此表的最大列数进一步减少。
  例如，除元组头外，由1600个<type>int</type>列组成的元组将占用6400字节并可以存储在堆页面中，
  而一个包含1600个<type>bigint</type>列的元组将消耗12800字节，因此无法放入单个堆页面。
  当类型为比如<type>text</type>，<type>varchar</type>和<type>char</type>的可变长度字段时，
  如果值的长度足够大，它们的值可以存储在行外的TOAST表中。 表堆中的元组中只保留18个字节的指针。
  对于较短长度的可变长度字段，使用4字节或1字节的字段头，并且该值存储在堆元组内部。
 </para>

<!--==========================orignal english content==========================
 <para>
  Columns that have been dropped from the table also contribute to the maximum
  column limit.  Moreover, although the dropped column values for newly
  created tuples are internally marked as null in the tuple's null bitmap, the
  null bitmap also occupies space.
 </para>
____________________________________________________________________________-->
 <para>
  从表中删除的列也会影响最大列限制。此外，尽管在元组的空位图中将新创建的元组的删除列值内部标记为空，但空位图也占用空间。
 </para>
</appendix>

<!-- doc/src/sgml/pgarchivecleanup.sgml -->

<refentry id="pgarchivecleanup">
 <refmeta>
  <refentrytitle><application>pg_archivecleanup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <!--
  <refmiscinfo>Application</refmiscinfo>
  -->
  <refmiscinfo>应用</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_archivecleanup</refname>
  <!--
  <refpurpose>clean up <productname>PostgreSQL</productname> WAL archive files</refpurpose>
  -->
  <refpurpose>清理<productname>PostgreSQL</productname> WAL归档文件</refpurpose>
 </refnamediv>

 <indexterm zone="pgarchivecleanup">
  <primary>pg_archivecleanup</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_archivecleanup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain"><replaceable>archivelocation</replaceable></arg>
   <arg choice="plain"><replaceable>oldestkeptwalfile</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <!--
<title>Description</title>
-->
<title>描述</title>


 <!--
<para>
  <application>pg_archivecleanup</> is designed to be used as an
  <literal>archive_cleanup_command</literal> to clean up WAL file archives when
  running as a standby server (see <xref linkend="warm-standby">).
  <application>pg_archivecleanup</> can also be used as a standalone program to
  clean WAL file archives.
 </para>
-->
<para>
<application>pg_archivecleanup</>被设计来用作<literal>archive_cleanup_command</literal>，
在作为备用服务器运行时清理WAL文件归档（参阅<xref linkend="warm-standby">）。
<application>pg_archivecleanup</>也可以用作一个单独的程序清理WAL文件归档。
</para>

  <!--
<para>
   To configure a standby
   server to use <application>pg_archivecleanup</>, put this into its
   <filename>recovery.conf</filename> configuration file:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>archivelocation</> %r'
</programlisting>
   where <replaceable>archivelocation</> is the directory from which WAL segment
   files should be removed.
  </para>
-->
<para>
要配置备用服务器使用<application>pg_archivecleanup</>，将下列代码放入
<filename>recovery.conf</filename>配置文件中：
<programlisting>
archive_cleanup_command = 'pg_archivecleanup <replaceable>archivelocation</> %r'
</programlisting>
这里的<replaceable>archivelocation</>是应该被移除的WAL段文件的目录。
</para>
  <!--
<para>
   When used within <xref linkend="archive-cleanup-command">, all WAL files
   logically preceding the value of the <literal>%r</> argument will be removed
   from <replaceable>archivelocation</>. This minimizes the number of files
   that need to be retained, while preserving crash-restart capability.  Use of
   this parameter is appropriate if the <replaceable>archivelocation</> is a
   transient staging area for this particular standby server, but
   <emphasis>not</> when the <replaceable>archivelocation</> is intended as a
   long-term WAL archive area, or when multiple standby servers are recovering
   from the same archive location.
  </para>
-->
<para>
当在<xref linkend="archive-cleanup-command">中使用时，所有逻辑上在<literal>%r</>
参数值之前的WAL文件都将从<replaceable>archivelocation</>中移除。
这在保存崩溃-重启能力时，最小化了需要保留的文件数量。
如果<replaceable>archivelocation</>是这个特殊的备用服务器的瞬态暂存区域，
那么使用这个参数是合适的，但是在<replaceable>archivelocation</>
用作长期WAL归档区，或者多个备用服务器是从同一个归档位置恢复而来的时，
是<emphasis>不</>合适的。
</para>
  
<para>
<!--
   When used as a standalone program all WAL files logically preceding the
   <replaceable>oldestkeptwalfile</> will be removed from <replaceable>archivelocation</>.
   In this mode, if you specify a <filename>.backup</> file name, then only the file prefix
   will be used as the <replaceable>oldestkeptwalfile</>. This allows you to remove
   all WAL files archived prior to a specific base backup without error.
   For example, the following example will remove all files older than
   WAL file name <filename>000000010000003700000010</>:
-->
当用作独立程序时，所有逻辑上在<replaceable>oldestkeptwalfile</>
之前的WAL文件都将从<replaceable>archivelocation</>中移除。
在这个模式中，如果你声明一个<filename>.backup</>文件名，
那么只有文件前缀将被用作<replaceable>oldestkeptwalfile</>。
这允许你无误的删除所有在一个特定基础备份之前归档的WAL文件。
例如，下面的例子将删除所有比WAL文件名<filename>000000010000003700000010</>更老的文件：
<programlisting>
pg_archivecleanup -d archive 000000010000003700000010.00000020.backup

pg_archivecleanup:  keep WAL file "archive/000000010000003700000010" and later
pg_archivecleanup:  removing file "archive/00000001000000370000000F"
pg_archivecleanup:  removing file "archive/00000001000000370000000E"
</programlisting>
  </para>

  <!--
<para>
   <application>pg_archivecleanup</application> assumes that
   <replaceable>archivelocation</> is a directory readable and writable by the
   server-owning user.
  </para>
-->
<para>
<application>pg_archivecleanup</application>假设<replaceable>archivelocation</>
是一个服务器所有者用户可读和可写的目录。
</para>
 </refsect1>

 <refsect1>
  <!--
  <title>Options</title>
  -->
  <title>选项</title>

   
<para>
<!-- 
    <application>pg_archivecleanup</application> accepts the following command-line arguments:
-->
<application>pg_archivecleanup</application>接受下列命令行参数：
    <variablelist>

     <varlistentry>
      <term><option>-d</option></term>
      <listitem>
<!--
       <para>
        Print lots of debug logging output on <filename>stderr</>.
       </para>
-->
<para>
在<filename>stderr</>上打印大量的调试日志输出。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <listitem>
       <!--
<para>
        Print the names of the files that would have been removed on <filename>stdout</> (performs a dry run).
       </para>
-->
<para>
打印将要在<filename>stdout</>上删除的文件名（执行一个空运行）。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
      <listitem>
       <!--
<para>
        Print the <application>pg_archivecleanup</application> version and exit.
       </para>
-->
<para>
打印<application>pg_archivecleanup</application>的版本并退出。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option> <replaceable>extension</></term>
      <listitem>
       <!--
<para>
        When using the program as a standalone utility, provide an extension
        that will be stripped from all file names before deciding if they
        should be deleted.  This is typically useful for cleaning up archives
        that have been compressed during storage, and therefore have had an
        extension added by the compression program.  For example: <literal>-x
        .gz</literal>.
       </para>
-->
<para>
当该程序用作单独的工具时，提供一个扩展，该扩展将在决定文件是否应该被删除之前，
提取所有的文件名。这通常在清理在存储时已经压缩了的归档时是有用的，
并且因此有一个由压缩程序添加的扩展。例如：<literal>-x.gz</literal>。
</para>

       <!--
<para>
        Note that the
        <filename>.backup</> file name passed to the program should not
        include the extension.
       </para>
-->
<para>
请注意，传递到该程序的<filename>.backup</>文件名不应该包含该扩展。
</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
       <!--
<para>
        Show help about <application>pg_archivecleanup</application> command line
        arguments, and exit.
       </para>
-->
<para>
显示关于<application>pg_archivecleanup</application>命令行参数的帮助信息，然后退出。
</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>

 <refsect1>
  <!--
<title>Notes</title>
-->
<title>注意</title>

  <!--
<para>
   <application>pg_archivecleanup</application> is designed to work with
   <productname>PostgreSQL</> 8.0 and later when used as a standalone utility,
   or with <productname>PostgreSQL</> 9.0 and later when used as an
   archive cleanup command.
  </para>
-->
<para>
当用作单独的工具时，<application>pg_archivecleanup</application>
是设计在<productname>PostgreSQL</> 8.0及更新的版本上使用的，
或者用作归档清理命令时，用在<productname>PostgreSQL</> 9.0及更新的版本上。
</para>

  <!--
<para>
   <application>pg_archivecleanup</application> is written in C and has an
   easy-to-modify source code, with specifically designated sections to modify
   for your own needs
  </para>
-->
<para>
<application>pg_archivecleanup</application>是用C写的，有一个容易修改的源代码，
有专门指定的部分用来修改以满足你自己的需要。
</para>
 </refsect1>

 <refsect1>
  <!--
<title>Examples</title>
-->
<title>例子</title>

  <!--
<para>On Linux or Unix systems, you might use:
<programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
</programlisting>
   where the archive directory is physically located on the standby server,
   so that the <varname>archive_command</> is accessing it across NFS,
   but the files are local to the standby.
   This will:
  </para>
-->
<para>
在Linux或Unix系统上，你可能使用：
<programlisting>
archive_cleanup_command = 'pg_archivecleanup -d /mnt/standby/archive %r 2>>cleanup.log'
</programlisting>
这里的归档目录的物理位置在备用服务器上，所以<varname>archive_command</>
是通过NFS访问它的，但是文件对于备用服务器是本地的。这将：
</para>
  <itemizedlist>
   <listitem>
    <!--
<para>
     produce debugging output in <filename>cleanup.log</>
    </para>
-->
<para>
在<filename>cleanup.log</>中产生调试输出
</para>
   </listitem>
   <listitem>
    <!--
<para>
     remove no-longer-needed files from the archive directory
    </para>
-->
<para>
从归档目录中移除不再需要的文件
</para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1>
  <!--
  <title>Author</title>
  -->
  <title>作者</title>

<para>
   Simon Riggs <email>simon@2ndquadrant.com</email>
  </para>
 </refsect1>

 <refsect1>
  <!--
<title>See Also</title>
-->
<title>又见</title>

  <simplelist type="inline">
   <member><xref linkend="pgstandby"></member>
  </simplelist>
 </refsect1>
</refentry>
